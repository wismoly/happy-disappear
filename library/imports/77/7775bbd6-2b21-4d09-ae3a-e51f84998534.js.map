{"version":3,"sources":["assets/Script/Utils/Toast.js"],"names":["Toast","text","gravity","duration","bg_color","cc","color","canvas","director","getScene","getComponentInChildren","Canvas","width","node","height","bgNode","Node","textNode","textLabel","addComponent","Label","horizontalAlign","HorizontalAlign","CENTER","verticalAlign","VerticalAlign","fontSize","string","length","overflow","Overflow","RESIZE_HEIGHT","lineCount","ctx","Graphics","arc","Math","PI","lineTo","fillColor","fill","addChild","y","x","finished","callFunc","destroy","action","sequence","moveBy","v2","fadeOut","runAction","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,CACEC,IADF,SAOE;AAAA,MANAA,IAMA;AANAA,IAAAA,IAMA,GANO,EAMP;AAAA;;AAAA,gCADI,EACJ;AAAA,0BAJEC,OAIF;AAAA,MAJEA,OAIF,6BAJY,QAIZ;AAAA,2BAHEC,QAGF;AAAA,MAHEA,QAGF,8BAHa,CAGb;AAAA,2BAFEC,QAEF;AAAA,MAFEA,QAEF,8BAFaC,EAAE,CAACC,KAAH,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,CAEb;;AACA;AACA,MAAIC,MAAM,GAAGF,EAAE,CAACG,QAAH,CAAYC,QAAZ,GAAuBC,sBAAvB,CAA8CL,EAAE,CAACM,MAAjD,CAAb;AACA,MAAIC,KAAK,GAAGL,MAAM,CAACM,IAAP,CAAYD,KAAxB;AACA,MAAIE,MAAM,GAAGP,MAAM,CAACM,IAAP,CAAYC,MAAzB;AAEA,MAAIC,MAAM,GAAG,IAAIV,EAAE,CAACW,IAAP,EAAb,CANA,CAQA;;AACA,MAAIC,QAAQ,GAAG,IAAIZ,EAAE,CAACW,IAAP,EAAf;AACA,MAAIE,SAAS,GAAGD,QAAQ,CAACE,YAAT,CAAsBd,EAAE,CAACe,KAAzB,CAAhB;AACAF,EAAAA,SAAS,CAACG,eAAV,GAA4BhB,EAAE,CAACe,KAAH,CAASE,eAAT,CAAyBC,MAArD;AACAL,EAAAA,SAAS,CAACM,aAAV,GAA0BnB,EAAE,CAACe,KAAH,CAASK,aAAT,CAAuBF,MAAjD;AACAL,EAAAA,SAAS,CAACQ,QAAV,GAAqB,EAArB;AACAR,EAAAA,SAAS,CAACS,MAAV,GAAmB1B,IAAnB,CAdA,CAgBA;;AACA,MAAIA,IAAI,CAAC2B,MAAL,GAAcV,SAAS,CAACQ,QAAxB,GAAoCd,KAAK,GAAG,CAAT,GAAc,CAArD,EAAwD;AACtDK,IAAAA,QAAQ,CAACL,KAAT,GAAkBA,KAAK,GAAG,CAAT,GAAc,CAA/B;AACAM,IAAAA,SAAS,CAACW,QAAV,GAAqBxB,EAAE,CAACe,KAAH,CAASU,QAAT,CAAkBC,aAAvC;AACD,GAHD,MAGO;AACLd,IAAAA,QAAQ,CAACL,KAAT,GAAiBX,IAAI,CAAC2B,MAAL,GAAcV,SAAS,CAACQ,QAAzC;AACD;;AACD,MAAIM,SAAS,GACX,CAAC,EAAG/B,IAAI,CAAC2B,MAAL,GAAcV,SAAS,CAACQ,QAAzB,IAAuCd,KAAK,GAAG,CAAT,GAAc,CAApD,CAAF,CAAD,GAA6D,CAD/D;AAEAK,EAAAA,QAAQ,CAACH,MAAT,GAAkBI,SAAS,CAACQ,QAAV,GAAqBM,SAAvC,CAzBA,CA2BA;;AACA,MAAIC,GAAG,GAAGlB,MAAM,CAACI,YAAP,CAAoBd,EAAE,CAAC6B,QAAvB,CAAV;AACAD,EAAAA,GAAG,CAACE,GAAJ,CACE,CAAClB,QAAQ,CAACL,KAAV,GAAkB,CADpB,EAEE,CAFF,EAGEK,QAAQ,CAACH,MAAT,GAAkB,CAAlB,GAAsB,EAHxB,EAIE,MAAMsB,IAAI,CAACC,EAJb,EAKE,MAAMD,IAAI,CAACC,EALb,EAME,IANF;AAQAJ,EAAAA,GAAG,CAACK,MAAJ,CAAWrB,QAAQ,CAACL,KAAT,GAAiB,CAA5B,EAA+B,EAAEK,QAAQ,CAACH,MAAT,GAAkB,CAAlB,GAAsB,EAAxB,CAA/B;AACAmB,EAAAA,GAAG,CAACE,GAAJ,CACElB,QAAQ,CAACL,KAAT,GAAiB,CADnB,EAEE,CAFF,EAGEK,QAAQ,CAACH,MAAT,GAAkB,CAAlB,GAAsB,EAHxB,EAIE,MAAMsB,IAAI,CAACC,EAJb,EAKE,MAAMD,IAAI,CAACC,EALb,EAME,IANF;AAQAJ,EAAAA,GAAG,CAACK,MAAJ,CAAW,CAACrB,QAAQ,CAACL,KAAV,GAAkB,CAA7B,EAAgCK,QAAQ,CAACH,MAAT,GAAkB,CAAlB,GAAsB,EAAtD;AACAmB,EAAAA,GAAG,CAACM,SAAJ,GAAgBnC,QAAhB;AACA6B,EAAAA,GAAG,CAACO,IAAJ;AAEAzB,EAAAA,MAAM,CAAC0B,QAAP,CAAgBxB,QAAhB,EAlDA,CAoDA;;AACA,MAAIf,OAAO,KAAK,QAAhB,EAA0B;AACxBa,IAAAA,MAAM,CAAC2B,CAAP,GAAW,CAAX;AACA3B,IAAAA,MAAM,CAAC4B,CAAP,GAAW,CAAX;AACD,GAHD,MAGO,IAAIzC,OAAO,KAAK,KAAhB,EAAuB;AAC5Ba,IAAAA,MAAM,CAAC2B,CAAP,GAAW3B,MAAM,CAAC2B,CAAP,GAAY5B,MAAM,GAAG,CAAV,GAAe,CAArC;AACD,GAFM,MAEA,IAAIZ,OAAO,KAAK,QAAhB,EAA0B;AAC/Ba,IAAAA,MAAM,CAAC2B,CAAP,GAAW3B,MAAM,CAAC2B,CAAP,GAAY5B,MAAM,GAAG,CAAV,GAAe,CAArC;AACD;;AAEDP,EAAAA,MAAM,CAACM,IAAP,CAAY4B,QAAZ,CAAqB1B,MAArB;AAEA,MAAI6B,QAAQ,GAAGvC,EAAE,CAACwC,QAAH,CAAY,YAAW;AACpC9B,IAAAA,MAAM,CAAC+B,OAAP;AACD,GAFc,CAAf;AAGA,MAAIC,MAAM,GAAG1C,EAAE,CAAC2C,QAAH,CACX3C,EAAE,CAAC4C,MAAH,CAAU9C,QAAV,EAAoBE,EAAE,CAAC6C,EAAH,CAAM,CAAN,EAAS,CAAT,CAApB,CADW,EAEX7C,EAAE,CAAC8C,OAAH,CAAW,GAAX,CAFW,EAGXP,QAHW,CAAb;AAKA7B,EAAAA,MAAM,CAACqC,SAAP,CAAiBL,MAAjB;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBtD,KAAjB","sourceRoot":"/","sourcesContent":["//一个简单的tost组件，用法：\n// let Toast = reqire('Toast.js')\n// Toast(text,{gravity,duration,bg_color})\n//text:要显示的字符串\n//gravity(可选):位置，String类型，可选值('CENTER','TOP','BOTTOM'),默认为'CENTER'\n//duration(可选):时间，Number类型，单位为秒，默认1s\n//bg_color(可选):颜色，cc.color类型，默认cc.color(102, 102, 102, 200)\nfunction Toast(\n  text = \"\",\n  {\n    gravity = \"CENTER\",\n    duration = 1,\n    bg_color = cc.color(102, 102, 102, 200)\n  } = {}\n) {\n  // canvas\n  let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\n  let width = canvas.node.width;\n  let height = canvas.node.height;\n\n  let bgNode = new cc.Node();\n\n  // Lable文本格式设置\n  let textNode = new cc.Node();\n  let textLabel = textNode.addComponent(cc.Label);\n  textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\n  textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\n  textLabel.fontSize = 30;\n  textLabel.string = text;\n\n  // 当文本宽度过长时，设置为自动换行格式\n  if (text.length * textLabel.fontSize > (width * 3) / 5) {\n    textNode.width = (width * 3) / 5;\n    textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\n  } else {\n    textNode.width = text.length * textLabel.fontSize;\n  }\n  let lineCount =\n    ~~((text.length * textLabel.fontSize) / ((width * 3) / 5)) + 1;\n  textNode.height = textLabel.fontSize * lineCount;\n\n  // 背景设置\n  let ctx = bgNode.addComponent(cc.Graphics);\n  ctx.arc(\n    -textNode.width / 2,\n    0,\n    textNode.height / 2 + 20,\n    0.5 * Math.PI,\n    1.5 * Math.PI,\n    true\n  );\n  ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));\n  ctx.arc(\n    textNode.width / 2,\n    0,\n    textNode.height / 2 + 20,\n    1.5 * Math.PI,\n    0.5 * Math.PI,\n    true\n  );\n  ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);\n  ctx.fillColor = bg_color;\n  ctx.fill();\n\n  bgNode.addChild(textNode);\n\n  // gravity 设置Toast显示的位置\n  if (gravity === \"CENTER\") {\n    bgNode.y = 0;\n    bgNode.x = 0;\n  } else if (gravity === \"TOP\") {\n    bgNode.y = bgNode.y + (height / 5) * 2;\n  } else if (gravity === \"BOTTOM\") {\n    bgNode.y = bgNode.y - (height / 5) * 2;\n  }\n\n  canvas.node.addChild(bgNode);\n\n  let finished = cc.callFunc(function() {\n    bgNode.destroy();\n  });\n  let action = cc.sequence(\n    cc.moveBy(duration, cc.v2(0, 0)),\n    cc.fadeOut(0.3),\n    finished\n  );\n  bgNode.runAction(action);\n}\n\nmodule.exports = Toast;"]}