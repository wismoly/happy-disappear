{"version":3,"sources":["assets/Script/View/EffectLayer.js"],"names":["cc","Class","Component","properties","bombWhite","type","Prefab","crushEffect","audioUtils","AudioUtils","onLoad","playEffects","effectQueue","length","soundMap","forEach","cmd","delayTime","playTime","callFunc","instantEffect","animation","action","instantiate","getComponent","Animation","play","playEliminate","step","x","CELL_WIDTH","pos","y","parent","node","on","destroy","runAction","sequence"],"mappings":"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","sourceRoot":"/","sourcesContent":["import {CELL_WIDTH} from '../Model/ConstValue';\n\nimport AudioUtils from \"../Utils/AudioUtils\";\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        bombWhite:{\n            default: null,\n            type: cc.Prefab\n        },\n        crushEffect:{\n            default: null,\n            type: cc.Prefab\n        },\n        audioUtils:{\n            type: AudioUtils,\n            default: null\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n    playEffects: function(effectQueue){\n        if(!effectQueue || effectQueue.length <= 0){\n            return ;\n        }\n        let soundMap = {}; //某一时刻，某一种声音是否播放过的标记，防止重复播放\n        effectQueue.forEach(function(cmd){\n            let delayTime = cc.delayTime(cmd.playTime);\n            let callFunc = cc.callFunc(function(){\n                let instantEffect = null;\n                let animation = null;\n                if(cmd.action == \"crush\"){\n                    instantEffect = cc.instantiate(this.crushEffect);\n                    animation  = instantEffect.getComponent(cc.Animation);\n                    animation.play(\"effect\");\n                    !soundMap[\"crush\" + cmd.playTime] && this.audioUtils.playEliminate(cmd.step);\n                    soundMap[\"crush\" + cmd.playTime] = true;\n                }\n                else if(cmd.action == \"rowBomb\"){\n                    instantEffect = cc.instantiate(this.bombWhite);\n                    animation  = instantEffect.getComponent(cc.Animation);\n                    animation.play(\"effect_line\");\n                }\n                else if(cmd.action == \"colBomb\"){\n                    instantEffect = cc.instantiate(this.bombWhite);\n                    animation  = instantEffect.getComponent(cc.Animation);\n                    animation.play(\"effect_col\");\n                }\n\n                instantEffect.x = CELL_WIDTH * (cmd.pos.x - 0.5);\n                instantEffect.y = CELL_WIDTH * (cmd.pos.y - 0.5);\n                instantEffect.parent = this.node;\n                animation.on(\"finished\",function(){\n                    instantEffect.destroy();\n                },this);\n               \n            },this);\n            this.node.runAction(cc.sequence(delayTime, callFunc));\n        },this);\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}