{"version":3,"sources":["assets/Script/Model/GameModel.js"],"names":["GameModel","cells","cellBgs","lastPos","cc","v2","cellTypeNum","cellCreateType","init","setCellTypeNum","i","GRID_WIDTH","j","GRID_HEIGHT","CellModel","type","flag","getRandomCellType","result","checkPoint","length","setXY","setStartXY","mock","mockInit","CELL_TYPE","A","B","x","y","initWithData","data","recursive","rowResult","checkWithDirection","colResult","samePoints","newCellStatus","CELL_STATUS","BIRD","WRAP","LINE","COLUMN","subCheckPoints","point","subResult","direction","queue","vis","push","front","cellModel","tmpX","tmpY","printInfo","printStr","console","log","getCells","selectCell","pos","changeModels","effectsQueue","delta","Math","abs","curClickCell","lastClickCell","exchangeCell","result1","result2","curTime","pushToChangeModels","isCanBomb","status","COMMON","moveToAndBack","moveTo","ANITIME","TOUCH_MOVE","processCrush","cycleCount","bombModels","pos1","pos2","model1","model2","bombModel","newCellType","crushPoint","model","crushCell","createNewCell","processBomb","DIE","down","setStatus","setVisible","newCheckPoint","curRow","k","count","indexOf","cleanCmd","cmd","tmpModel","num","createTypeList","CELL_BASENUM","index","floor","random","newBombModel","bombTime","BOMB_DELAY","forEach","addRowBomb","addColBomb","crushType","BOMB_BIRD_DELAY","addCrushEffect","playTime","step","action","addWrapBomb","needShake","toShake","shakeTime","DIE_SHAKE","toDie"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEqBA;AACnB,uBAAc;AACZ,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,OAAL,GAAeC,EAAE,CAACC,EAAH,CAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CAAf;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,cAAL,GAAsB,EAAtB,CALY,CAKc;AAC3B;;;;SAEDC,OAAA,cAAKF,WAAL,EAAkB;AAChB,SAAKL,KAAL,GAAa,EAAb;AACA,SAAKQ,cAAL,CAAoBH,WAAW,IAAI,KAAKA,WAAxC;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,sBAArB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,WAAKT,KAAL,CAAWS,CAAX,IAAgB,EAAhB;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,uBAArB,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,aAAKX,KAAL,CAAWS,CAAX,EAAcE,CAAd,IAAmB,IAAIE,qBAAJ,EAAnB;AACD;AACF,KARe,CAUhB;;;AACA,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,sBAArB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,uBAArB,EAAkCD,CAAC,EAAnC,EAAuC;AACrC;AACA,YAAI,KAAKX,KAAL,CAAWS,CAAX,EAAcE,CAAd,EAAiBG,IAAjB,IAAyB,IAA7B,EAAmC;AACjC;AACD;;AACD,YAAIC,IAAI,GAAG,IAAX;;AACA,eAAOA,IAAP,EAAa;AACXA,UAAAA,IAAI,GAAG,KAAP;AAEA,eAAKf,KAAL,CAAWS,CAAX,EAAcE,CAAd,EAAiBJ,IAAjB,CAAsB,KAAKS,iBAAL,EAAtB;AACA,cAAIC,MAAM,GAAG,KAAKC,UAAL,CAAgBP,CAAhB,EAAmBF,CAAnB,EAAsB,CAAtB,CAAb;;AACA,cAAIQ,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrBJ,YAAAA,IAAI,GAAG,IAAP;AACD;;AACD,eAAKf,KAAL,CAAWS,CAAX,EAAcE,CAAd,EAAiBS,KAAjB,CAAuBT,CAAvB,EAA0BF,CAA1B;AACA,eAAKT,KAAL,CAAWS,CAAX,EAAcE,CAAd,EAAiBU,UAAjB,CAA4BV,CAA5B,EAA+BF,CAA/B;AACD;AACF;AACF;AAEF;;SAEDa,OAAA,gBAAO;AACL,SAAKC,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUC,CAA9B;AACA,SAAKF,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUC,CAA9B;AACA,SAAKF,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUC,CAA9B;AACA,SAAKF,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUC,CAA9B;AACA,SAAKF,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUE,CAA9B;AACA,SAAKH,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUE,CAA9B;AACA,SAAKH,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUE,CAA9B;AACA,SAAKH,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,sBAAUC,CAA9B;AACD;;SACDF,WAAA,kBAASI,CAAT,EAAYC,CAAZ,EAAed,IAAf,EAAqB;AACnB,SAAKd,KAAL,CAAW2B,CAAX,EAAcC,CAAd,EAAiBrB,IAAjB,CAAsBO,IAAtB;AACA,SAAKd,KAAL,CAAW2B,CAAX,EAAcC,CAAd,EAAiBR,KAAjB,CAAuBQ,CAAvB,EAA0BD,CAA1B;AACA,SAAK3B,KAAL,CAAW2B,CAAX,EAAcC,CAAd,EAAiBP,UAAjB,CAA4BO,CAA5B,EAA+BD,CAA/B;AACD;;SAGDE,eAAA,sBAAaC,IAAb,EAAmB,CACjB;AACD;AAED;;;;;;;;;SAOAZ,aAAA,oBAAWS,CAAX,EAAcC,CAAd,EAAiBG,SAAjB,EAA4B;AAC1B,QAAIC,SAAS,GAAG,KAAKC,kBAAL,CAAwBN,CAAxB,EAA2BC,CAA3B,EAA8B,CAACzB,EAAE,CAACC,EAAH,CAAM,CAAN,EAAS,CAAT,CAAD,EAAcD,EAAE,CAACC,EAAH,CAAM,CAAC,CAAP,EAAU,CAAV,CAAd,CAA9B,CAAhB;AACA,QAAI8B,SAAS,GAAG,KAAKD,kBAAL,CAAwBN,CAAxB,EAA2BC,CAA3B,EAA8B,CAACzB,EAAE,CAACC,EAAH,CAAM,CAAN,EAAS,CAAC,CAAV,CAAD,EAAeD,EAAE,CAACC,EAAH,CAAM,CAAN,EAAS,CAAT,CAAf,CAA9B,CAAhB;AACA,QAAI+B,UAAU,GAAG,EAAjB;AACA,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAIJ,SAAS,CAACb,MAAV,IAAoB,CAApB,IAAyBe,SAAS,CAACf,MAAV,IAAoB,CAAjD,EAAoD;AAClDiB,MAAAA,aAAa,GAAGC,wBAAYC,IAA5B;AACD,KAFD,MAGK,IAAIN,SAAS,CAACb,MAAV,IAAoB,CAApB,IAAyBe,SAAS,CAACf,MAAV,IAAoB,CAAjD,EAAoD;AACvDiB,MAAAA,aAAa,GAAGC,wBAAYE,IAA5B;AACD,KAFI,MAGA,IAAIP,SAAS,CAACb,MAAV,IAAoB,CAAxB,EAA2B;AAC9BiB,MAAAA,aAAa,GAAGC,wBAAYG,IAA5B;AACD,KAFI,MAGA,IAAIN,SAAS,CAACf,MAAV,IAAoB,CAAxB,EAA2B;AAC9BiB,MAAAA,aAAa,GAAGC,wBAAYI,MAA5B;AACD;;AACD,QAAIT,SAAS,CAACb,MAAV,IAAoB,CAAxB,EAA2B;AACzBgB,MAAAA,UAAU,GAAGH,SAAb;AACD;;AACD,QAAIE,SAAS,CAACf,MAAV,IAAoB,CAAxB,EAA2B;AACzBgB,MAAAA,UAAU,GAAG,iCAAgBA,UAAhB,EAA4BD,SAA5B,CAAb;AACD;;AACD,QAAIjB,MAAM,GAAG,CAACkB,UAAD,EAAaC,aAAb,EAA4B,KAAKpC,KAAL,CAAW4B,CAAX,EAAcD,CAAd,EAAiBb,IAA7C,EAAmDX,EAAE,CAACC,EAAH,CAAMuB,CAAN,EAASC,CAAT,CAAnD,CAAb,CAvB0B,CAwB1B;;AACA,QAAIG,SAAS,IAAId,MAAM,CAACE,MAAP,IAAiB,CAAlC,EAAqC;AACnC,UAAIuB,cAAc,GAAG,gCAAeP,UAAf,EAA2BhC,EAAE,CAACC,EAAH,CAAMuB,CAAN,EAASC,CAAT,CAA3B,CAArB;;AACA,2DAAkBc,cAAlB,wCAAkC;AAAA,YAAzBC,KAAyB;AAChC,YAAIC,SAAS,GAAG,KAAK1B,UAAL,CAAgByB,KAAK,CAAChB,CAAtB,EAAyBgB,KAAK,CAACf,CAA/B,EAAkC,KAAlC,CAAhB;;AACA,YAAIgB,SAAS,CAAC,CAAD,CAAT,GAAe3B,MAAM,CAAC,CAAD,CAArB,IAA6B2B,SAAS,CAAC,CAAD,CAAT,KAAiB3B,MAAM,CAAC,CAAD,CAAvB,IAA8B2B,SAAS,CAAC,CAAD,CAAT,CAAazB,MAAb,GAAsBF,MAAM,CAAC,CAAD,CAAN,CAAUE,MAA/F,EAAwG;AACtGF,UAAAA,MAAM,GAAG2B,SAAT;AACD;AACF;AACF;;AACD,WAAO3B,MAAP;AACD;;SAEDgB,qBAAA,4BAAmBN,CAAnB,EAAsBC,CAAtB,EAAyBiB,SAAzB,EAAoC;AAClC,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,GAAG,GAAG,EAAV;AACAA,IAAAA,GAAG,CAACpB,CAAC,GAAGC,CAAC,GAAG,CAAT,CAAH,GAAiB,IAAjB;AACAkB,IAAAA,KAAK,CAACE,IAAN,CAAW7C,EAAE,CAACC,EAAH,CAAMuB,CAAN,EAASC,CAAT,CAAX;AACA,QAAIqB,KAAK,GAAG,CAAZ;;AACA,WAAOA,KAAK,GAAGH,KAAK,CAAC3B,MAArB,EAA6B;AAC3B;AACA,UAAIwB,KAAK,GAAGG,KAAK,CAACG,KAAD,CAAjB;AACA,UAAIC,SAAS,GAAG,KAAKlD,KAAL,CAAW2C,KAAK,CAACf,CAAjB,EAAoBe,KAAK,CAAChB,CAA1B,CAAhB;AACAsB,MAAAA,KAAK;;AACL,UAAI,CAACC,SAAL,EAAgB;AACd;AACD;;AACD,WAAK,IAAIzC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoC,SAAS,CAAC1B,MAA9B,EAAsCV,CAAC,EAAvC,EAA2C;AACzC,YAAI0C,IAAI,GAAGR,KAAK,CAAChB,CAAN,GAAUkB,SAAS,CAACpC,CAAD,CAAT,CAAakB,CAAlC;AACA,YAAIyB,IAAI,GAAGT,KAAK,CAACf,CAAN,GAAUiB,SAAS,CAACpC,CAAD,CAAT,CAAamB,CAAlC;;AACA,YAAIuB,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,CAAnB,IACCC,IAAI,GAAG,CADR,IACaA,IAAI,GAAG,CADpB,IAECL,GAAG,CAACI,IAAI,GAAGC,IAAI,GAAG,CAAf,CAFJ,IAGC,CAAC,KAAKpD,KAAL,CAAWoD,IAAX,EAAiBD,IAAjB,CAHN,EAG8B;AAC5B;AACD;;AACD,YAAID,SAAS,CAACpC,IAAV,KAAmB,KAAKd,KAAL,CAAWoD,IAAX,EAAiBD,IAAjB,EAAuBrC,IAA9C,EAAoD;AAClDiC,UAAAA,GAAG,CAACI,IAAI,GAAGC,IAAI,GAAG,CAAf,CAAH,GAAuB,IAAvB;AACAN,UAAAA,KAAK,CAACE,IAAN,CAAW7C,EAAE,CAACC,EAAH,CAAM+C,IAAN,EAAYC,IAAZ,CAAX;AACD;AACF;AACF;;AACD,WAAON,KAAP;AACD;;SAEDO,YAAA,qBAAY;AACV,SAAK,IAAI5C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAI6C,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B2C,QAAAA,QAAQ,IAAI,KAAKtD,KAAL,CAAWS,CAAX,EAAcE,CAAd,EAAiBG,IAAjB,GAAwB,GAApC;AACD;;AACDyC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD;AACF;;SAEDG,WAAA,oBAAW;AACT,WAAO,KAAKzD,KAAZ;AACD,IACD;AACA;;;SACA0D,aAAA,oBAAWC,GAAX,EAAgB;AACd,SAAKC,YAAL,GAAoB,EAApB,CADc,CACS;;AACvB,SAAKC,YAAL,GAAoB,EAApB,CAFc,CAEU;;AACxB,QAAI3D,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAI4D,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASL,GAAG,CAAChC,CAAJ,GAAQzB,OAAO,CAACyB,CAAzB,IAA8BoC,IAAI,CAACC,GAAL,CAASL,GAAG,CAAC/B,CAAJ,GAAQ1B,OAAO,CAAC0B,CAAzB,CAA1C;;AACA,QAAIkC,KAAK,IAAI,CAAb,EAAgB;AAAE;AAChB,WAAK5D,OAAL,GAAeyD,GAAf;AACA,aAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACD;;AACD,QAAIM,YAAY,GAAG,KAAKjE,KAAL,CAAW2D,GAAG,CAAC/B,CAAf,EAAkB+B,GAAG,CAAChC,CAAtB,CAAnB,CATc,CAS+B;;AAC7C,QAAIuC,aAAa,GAAG,KAAKlE,KAAL,CAAWE,OAAO,CAAC0B,CAAnB,EAAsB1B,OAAO,CAACyB,CAA9B,CAApB,CAVc,CAUwC;;AACtD,SAAKwC,YAAL,CAAkBjE,OAAlB,EAA2ByD,GAA3B;AACA,QAAIS,OAAO,GAAG,KAAKlD,UAAL,CAAgByC,GAAG,CAAChC,CAApB,EAAuBgC,GAAG,CAAC/B,CAA3B,EAA8B,CAA9B,CAAd;AACA,QAAIyC,OAAO,GAAG,KAAKnD,UAAL,CAAgBhB,OAAO,CAACyB,CAAxB,EAA2BzB,OAAO,CAAC0B,CAAnC,EAAsC,CAAtC,CAAd;AACA,SAAK0C,OAAL,GAAe,CAAf,CAdc,CAcI;;AAClB,SAAKC,kBAAL,CAAwBN,YAAxB;AACA,SAAKM,kBAAL,CAAwBL,aAAxB;AACA,QAAIM,SAAS,GAAIP,YAAY,CAACQ,MAAb,IAAuBpC,wBAAYqC,MAAnC,IAA6C;AAC5DR,IAAAA,aAAa,CAACO,MAAd,IAAwBpC,wBAAYqC,MADtB,IAEdT,YAAY,CAACQ,MAAb,IAAuBpC,wBAAYC,IAFrB,IAGd4B,aAAa,CAACO,MAAd,IAAwBpC,wBAAYC,IAHtC;;AAIA,QAAI8B,OAAO,CAACjD,MAAR,GAAiB,CAAjB,IAAsBkD,OAAO,CAAClD,MAAR,GAAiB,CAAvC,IAA4C,CAACqD,SAAjD,EAA4D;AAAC;AAC3D,WAAKL,YAAL,CAAkBjE,OAAlB,EAA2ByD,GAA3B;AACAM,MAAAA,YAAY,CAACU,aAAb,CAA2BzE,OAA3B;AACAgE,MAAAA,aAAa,CAACS,aAAd,CAA4BhB,GAA5B;AACA,WAAKzD,OAAL,GAAeC,EAAE,CAACC,EAAH,CAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CAAf;AACA,aAAO,CAAC,KAAKwD,YAAN,CAAP;AACD,KAND,MAOK;AACH,WAAK1D,OAAL,GAAeC,EAAE,CAACC,EAAH,CAAM,CAAC,CAAP,EAAU,CAAC,CAAX,CAAf;AACA6D,MAAAA,YAAY,CAACW,MAAb,CAAoB1E,OAApB,EAA6B,KAAKoE,OAAlC;AACAJ,MAAAA,aAAa,CAACU,MAAd,CAAqBjB,GAArB,EAA0B,KAAKW,OAA/B;AACA,UAAIpD,UAAU,GAAG,CAACyC,GAAD,EAAMzD,OAAN,CAAjB;AACA,WAAKoE,OAAL,IAAgBO,oBAAQC,UAAxB;AACA,WAAKC,YAAL,CAAkB7D,UAAlB;AACA,aAAO,CAAC,KAAK0C,YAAN,EAAoB,KAAKC,YAAzB,CAAP;AACD;AACF,IACD;;;SACAkB,eAAA,sBAAa7D,UAAb,EAAyB;AACvB,QAAI8D,UAAU,GAAG,CAAjB;;AACA,WAAO9D,UAAU,CAACC,MAAX,GAAoB,CAA3B,EAA8B;AAC5B,UAAI8D,UAAU,GAAG,EAAjB;;AACA,UAAID,UAAU,IAAI,CAAd,IAAmB9D,UAAU,CAACC,MAAX,IAAqB,CAA5C,EAA+C;AAAE;AAC/C,YAAI+D,IAAI,GAAGhE,UAAU,CAAC,CAAD,CAArB;AACA,YAAIiE,IAAI,GAAGjE,UAAU,CAAC,CAAD,CAArB;AACA,YAAIkE,MAAM,GAAG,KAAKpF,KAAL,CAAWkF,IAAI,CAACtD,CAAhB,EAAmBsD,IAAI,CAACvD,CAAxB,CAAb;AACA,YAAI0D,MAAM,GAAG,KAAKrF,KAAL,CAAWmF,IAAI,CAACvD,CAAhB,EAAmBuD,IAAI,CAACxD,CAAxB,CAAb;;AACA,YAAIyD,MAAM,CAACX,MAAP,IAAiBpC,wBAAYC,IAA7B,IAAqC+C,MAAM,CAACZ,MAAP,IAAiBpC,wBAAYC,IAAtE,EAA4E;AAC1E,cAAIgD,SAAS,GAAG,IAAhB;;AACA,cAAIF,MAAM,CAACX,MAAP,IAAiBpC,wBAAYC,IAAjC,EAAuC;AACrC8C,YAAAA,MAAM,CAACtE,IAAP,GAAcuE,MAAM,CAACvE,IAArB;AACAmE,YAAAA,UAAU,CAACjC,IAAX,CAAgBoC,MAAhB;AACD,WAHD,MAIK;AACHC,YAAAA,MAAM,CAACvE,IAAP,GAAcsE,MAAM,CAACtE,IAArB;AACAmE,YAAAA,UAAU,CAACjC,IAAX,CAAgBqC,MAAhB;AACD;AAEF;AACF;;AACD,WAAK,IAAI5E,CAAT,IAAcS,UAAd,EAA0B;AACxB,YAAIyC,GAAG,GAAGzC,UAAU,CAACT,CAAD,CAApB;;AACA,YAAI,CAAC,KAAKT,KAAL,CAAW2D,GAAG,CAAC/B,CAAf,EAAkB+B,GAAG,CAAChC,CAAtB,CAAL,EAA+B;AAC7B;AACD;;AAJuB,+BAK+B,KAAKT,UAAL,CAAgByC,GAAG,CAAChC,CAApB,EAAuBgC,GAAG,CAAC/B,CAA3B,EAA8B,IAA9B,CAL/B;AAAA,YAKnBX,MALmB;AAAA,YAKXmB,aALW;AAAA,YAKImD,WALJ;AAAA,YAKiBC,UALjB;;AAOxB,YAAIvE,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACrB;AACD;;AACD,aAAK,IAAIR,CAAT,IAAcM,MAAd,EAAsB;AACpB,cAAIwE,KAAK,GAAG,KAAKzF,KAAL,CAAWiB,MAAM,CAACN,CAAD,CAAN,CAAUiB,CAArB,EAAwBX,MAAM,CAACN,CAAD,CAAN,CAAUgB,CAAlC,CAAZ;AACA,eAAK+D,SAAL,CAAezE,MAAM,CAACN,CAAD,CAAN,CAAUgB,CAAzB,EAA4BV,MAAM,CAACN,CAAD,CAAN,CAAUiB,CAAtC,EAAyC,KAAzC,EAAgDoD,UAAhD;;AACA,cAAIS,KAAK,CAAChB,MAAN,IAAgBpC,wBAAYqC,MAAhC,EAAwC;AACtCO,YAAAA,UAAU,CAACjC,IAAX,CAAgByC,KAAhB;AACD;AACF;;AACD,aAAKE,aAAL,CAAmBH,UAAnB,EAA+BpD,aAA/B,EAA8CmD,WAA9C;AAED;;AACD,WAAKK,WAAL,CAAiBX,UAAjB,EAA6BD,UAA7B;AACA,WAAKV,OAAL,IAAgBO,oBAAQgB,GAAxB;AACA3E,MAAAA,UAAU,GAAG,KAAK4E,IAAL,EAAb;AACAd,MAAAA,UAAU;AACX;AACF,IAED;;;SACAW,gBAAA,uBAAchC,GAAd,EAAmBc,MAAnB,EAA2B3D,IAA3B,EAAiC;AAC/B,QAAI2D,MAAM,IAAI,EAAd,EAAkB;AAChB;AACD;;AACD,QAAIA,MAAM,IAAIpC,wBAAYC,IAA1B,EAAgC;AAC9BxB,MAAAA,IAAI,GAAGU,sBAAUc,IAAjB;AACD;;AACD,QAAImD,KAAK,GAAG,IAAI5E,qBAAJ,EAAZ;AACA,SAAKb,KAAL,CAAW2D,GAAG,CAAC/B,CAAf,EAAkB+B,GAAG,CAAChC,CAAtB,IAA2B8D,KAA3B;AACAA,IAAAA,KAAK,CAAClF,IAAN,CAAWO,IAAX;AACA2E,IAAAA,KAAK,CAACpE,UAAN,CAAiBsC,GAAG,CAAChC,CAArB,EAAwBgC,GAAG,CAAC/B,CAA5B;AACA6D,IAAAA,KAAK,CAACrE,KAAN,CAAYuC,GAAG,CAAChC,CAAhB,EAAmBgC,GAAG,CAAC/B,CAAvB;AACA6D,IAAAA,KAAK,CAACM,SAAN,CAAgBtB,MAAhB;AACAgB,IAAAA,KAAK,CAACO,UAAN,CAAiB,CAAjB,EAAoB,KAApB;AACAP,IAAAA,KAAK,CAACO,UAAN,CAAiB,KAAK1B,OAAtB,EAA+B,IAA/B;AACA,SAAKV,YAAL,CAAkBZ,IAAlB,CAAuByC,KAAvB;AACD,IACD;;;SACAK,OAAA,gBAAO;AACL,QAAIG,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,sBAArB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,uBAArB,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAI,KAAKX,KAAL,CAAWS,CAAX,EAAcE,CAAd,KAAoB,IAAxB,EAA8B;AAC5B,cAAIuF,MAAM,GAAGzF,CAAb;;AACA,eAAK,IAAI0F,CAAC,GAAGD,MAAb,EAAqBC,CAAC,IAAIvF,uBAA1B,EAAuCuF,CAAC,EAAxC,EAA4C;AAC1C,gBAAI,KAAKnG,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,CAAJ,EAAsB;AACpB,mBAAK4D,kBAAL,CAAwB,KAAKvE,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,CAAxB;AACAsF,cAAAA,aAAa,CAACjD,IAAd,CAAmB,KAAKhD,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,CAAnB;AACA,mBAAKX,KAAL,CAAWkG,MAAX,EAAmBvF,CAAnB,IAAwB,KAAKX,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,CAAxB;AACA,mBAAKX,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,IAAmB,IAAnB;AACA,mBAAKX,KAAL,CAAWkG,MAAX,EAAmBvF,CAAnB,EAAsBS,KAAtB,CAA4BT,CAA5B,EAA+BuF,MAA/B;AACA,mBAAKlG,KAAL,CAAWkG,MAAX,EAAmBvF,CAAnB,EAAsBiE,MAAtB,CAA6BzE,EAAE,CAACC,EAAH,CAAMO,CAAN,EAASuF,MAAT,CAA7B,EAA+C,KAAK5B,OAApD;AACA4B,cAAAA,MAAM;AACP;AACF;;AACD,cAAIE,KAAK,GAAG,CAAZ;;AACA,eAAK,IAAID,CAAC,GAAGD,MAAb,EAAqBC,CAAC,IAAIvF,uBAA1B,EAAuCuF,CAAC,EAAxC,EAA4C;AAC1C,iBAAKnG,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,IAAmB,IAAIE,qBAAJ,EAAnB;AACA,iBAAKb,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,EAAiBJ,IAAjB,CAAsB,KAAKS,iBAAL,EAAtB;AACA,iBAAKhB,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,EAAiBU,UAAjB,CAA4BV,CAA5B,EAA+ByF,KAAK,GAAGxF,uBAAvC;AACA,iBAAKZ,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,EAAiBS,KAAjB,CAAuBT,CAAvB,EAA0ByF,KAAK,GAAGxF,uBAAlC;AACA,iBAAKZ,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,EAAiBiE,MAAjB,CAAwBzE,EAAE,CAACC,EAAH,CAAMO,CAAN,EAASwF,CAAT,CAAxB,EAAqC,KAAK7B,OAA1C;AACA8B,YAAAA,KAAK;AACL,iBAAKxC,YAAL,CAAkBZ,IAAlB,CAAuB,KAAKhD,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,CAAvB;AACAsF,YAAAA,aAAa,CAACjD,IAAd,CAAmB,KAAKhD,KAAL,CAAWmG,CAAX,EAAcxF,CAAd,CAAnB;AACD;AAEF;AACF;AACF;;AACD,SAAK2D,OAAL,IAAgBO,oBAAQC,UAAR,GAAqB,GAArC;AACA,WAAOmB,aAAP;AACD;;SAED1B,qBAAA,4BAAmBkB,KAAnB,EAA0B;AACxB,QAAI,KAAK7B,YAAL,CAAkByC,OAAlB,CAA0BZ,KAA1B,KAAoC,CAAC,CAAzC,EAA4C;AAC1C;AACD;;AACD,SAAK7B,YAAL,CAAkBZ,IAAlB,CAAuByC,KAAvB;AACD;;SAEDa,WAAA,oBAAW;AACT,SAAK,IAAI7F,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,sBAArB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,uBAArB,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAI,KAAKX,KAAL,CAAWS,CAAX,EAAcE,CAAd,CAAJ,EAAsB;AACpB,eAAKX,KAAL,CAAWS,CAAX,EAAcE,CAAd,EAAiB4F,GAAjB,GAAuB,EAAvB;AACD;AACF;AACF;AACF;;SAEDpC,eAAA,sBAAae,IAAb,EAAmBC,IAAnB,EAAyB;AACvB,QAAIqB,QAAQ,GAAG,KAAKxG,KAAL,CAAWkF,IAAI,CAACtD,CAAhB,EAAmBsD,IAAI,CAACvD,CAAxB,CAAf;AACA,SAAK3B,KAAL,CAAWkF,IAAI,CAACtD,CAAhB,EAAmBsD,IAAI,CAACvD,CAAxB,IAA6B,KAAK3B,KAAL,CAAWmF,IAAI,CAACvD,CAAhB,EAAmBuD,IAAI,CAACxD,CAAxB,CAA7B;AACA,SAAK3B,KAAL,CAAWkF,IAAI,CAACtD,CAAhB,EAAmBsD,IAAI,CAACvD,CAAxB,EAA2BA,CAA3B,GAA+BuD,IAAI,CAACvD,CAApC;AACA,SAAK3B,KAAL,CAAWkF,IAAI,CAACtD,CAAhB,EAAmBsD,IAAI,CAACvD,CAAxB,EAA2BC,CAA3B,GAA+BsD,IAAI,CAACtD,CAApC;AACA,SAAK5B,KAAL,CAAWmF,IAAI,CAACvD,CAAhB,EAAmBuD,IAAI,CAACxD,CAAxB,IAA6B6E,QAA7B;AACA,SAAKxG,KAAL,CAAWmF,IAAI,CAACvD,CAAhB,EAAmBuD,IAAI,CAACxD,CAAxB,EAA2BA,CAA3B,GAA+BwD,IAAI,CAACxD,CAApC;AACA,SAAK3B,KAAL,CAAWmF,IAAI,CAACvD,CAAhB,EAAmBuD,IAAI,CAACxD,CAAxB,EAA2BC,CAA3B,GAA+BuD,IAAI,CAACvD,CAApC;AACD,IACD;AACA;;;SACApB,iBAAA,wBAAeiG,GAAf,EAAoB;AAClBlD,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBiD,GAAtB;AACA,SAAKpG,WAAL,GAAmBoG,GAAnB;AACA,SAAKnG,cAAL,GAAsB,EAAtB;AACA,QAAIoG,cAAc,GAAG,KAAKpG,cAA1B;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIkG,wBAArB,EAAmClG,CAAC,EAApC,EAAwC;AACtCiG,MAAAA,cAAc,CAAC1D,IAAf,CAAoBvC,CAApB;AACD;;AACD,SAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGiG,cAAc,CAACvF,MAAnC,EAA2CV,EAAC,EAA5C,EAAgD;AAC9C,UAAImG,KAAK,GAAG7C,IAAI,CAAC8C,KAAL,CAAW9C,IAAI,CAAC+C,MAAL,MAAiBH,2BAAelG,EAAhC,CAAX,IAAiDA,EAA7D;;AACAiG,MAAAA,cAAc,CAACjG,EAAD,CAAd,EAAmBiG,cAAc,CAACE,KAAD,CAAd,GAAwBF,cAAc,CAACE,KAAD,CAAzD,EAAkEF,cAAc,CAACjG,EAAD,CAAhF;AACD;AACF,IACD;;;SACAO,oBAAA,6BAAoB;AAClB,QAAI4F,KAAK,GAAG7C,IAAI,CAAC8C,KAAL,CAAW9C,IAAI,CAAC+C,MAAL,KAAgB,KAAKzG,WAAhC,CAAZ;AACA,WAAO,KAAKC,cAAL,CAAoBsG,KAApB,CAAP;AACD,IACD;;;SACAhB,cAAA,qBAAYX,UAAZ,EAAwBD,UAAxB,EAAoC;AAAA;;AAAA;AAEhC,UAAI+B,YAAY,GAAG,EAAnB;AACA,UAAIC,QAAQ,GAAGnC,oBAAQoC,UAAvB;AACAhC,MAAAA,UAAU,CAACiC,OAAX,CAAmB,UAAUzB,KAAV,EAAiB;AAClC,YAAIA,KAAK,CAAChB,MAAN,IAAgBpC,wBAAYG,IAAhC,EAAsC;AACpC,eAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,sBAArB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,gBAAI,KAAKT,KAAL,CAAWyF,KAAK,CAAC7D,CAAjB,EAAoBnB,CAApB,CAAJ,EAA4B;AAC1B,kBAAI,KAAKT,KAAL,CAAWyF,KAAK,CAAC7D,CAAjB,EAAoBnB,CAApB,EAAuBgE,MAAvB,IAAiCpC,wBAAYqC,MAAjD,EAAyD;AACvDqC,gBAAAA,YAAY,CAAC/D,IAAb,CAAkB,KAAKhD,KAAL,CAAWyF,KAAK,CAAC7D,CAAjB,EAAoBnB,CAApB,CAAlB;AACD;;AACD,mBAAKiF,SAAL,CAAejF,CAAf,EAAkBgF,KAAK,CAAC7D,CAAxB,EAA2B,KAA3B,EAAkCoD,UAAlC;AACD;AACF;;AACD,eAAKmC,UAAL,CAAgB,KAAK7C,OAArB,EAA8BnE,EAAE,CAACC,EAAH,CAAMqF,KAAK,CAAC9D,CAAZ,EAAe8D,KAAK,CAAC7D,CAArB,CAA9B;AACD,SAVD,MAWK,IAAI6D,KAAK,CAAChB,MAAN,IAAgBpC,wBAAYI,MAAhC,EAAwC;AAC3C,eAAK,IAAIhC,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAIG,uBAArB,EAAkCH,GAAC,EAAnC,EAAuC;AACrC,gBAAI,KAAKT,KAAL,CAAWS,GAAX,EAAcgF,KAAK,CAAC9D,CAApB,CAAJ,EAA4B;AAC1B,kBAAI,KAAK3B,KAAL,CAAWS,GAAX,EAAcgF,KAAK,CAAC9D,CAApB,EAAuB8C,MAAvB,IAAiCpC,wBAAYqC,MAAjD,EAAyD;AACvDqC,gBAAAA,YAAY,CAAC/D,IAAb,CAAkB,KAAKhD,KAAL,CAAWS,GAAX,EAAcgF,KAAK,CAAC9D,CAApB,CAAlB;AACD;;AACD,mBAAK+D,SAAL,CAAeD,KAAK,CAAC9D,CAArB,EAAwBlB,GAAxB,EAA2B,KAA3B,EAAkCuE,UAAlC;AACD;AACF;;AACD,eAAKoC,UAAL,CAAgB,KAAK9C,OAArB,EAA8BnE,EAAE,CAACC,EAAH,CAAMqF,KAAK,CAAC9D,CAAZ,EAAe8D,KAAK,CAAC7D,CAArB,CAA9B;AACD,SAVI,MAWA,IAAI6D,KAAK,CAAChB,MAAN,IAAgBpC,wBAAYE,IAAhC,EAAsC;AACzC,cAAIZ,CAAC,GAAG8D,KAAK,CAAC9D,CAAd;AACA,cAAIC,CAAC,GAAG6D,KAAK,CAAC7D,CAAd;;AACA,eAAK,IAAInB,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAIG,uBAArB,EAAkCH,GAAC,EAAnC,EAAuC;AACrC,iBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,sBAArB,EAAiCC,CAAC,EAAlC,EAAsC;AACpC,kBAAImD,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASrC,CAAC,GAAGhB,CAAb,IAAkBoD,IAAI,CAACC,GAAL,CAASpC,CAAC,GAAGnB,GAAb,CAA9B;;AACA,kBAAI,KAAKT,KAAL,CAAWS,GAAX,EAAcE,CAAd,KAAoBmD,KAAK,IAAI,CAAjC,EAAoC;AAClC,oBAAI,KAAK9D,KAAL,CAAWS,GAAX,EAAcE,CAAd,EAAiB8D,MAAjB,IAA2BpC,wBAAYqC,MAA3C,EAAmD;AACjDqC,kBAAAA,YAAY,CAAC/D,IAAb,CAAkB,KAAKhD,KAAL,CAAWS,GAAX,EAAcE,CAAd,CAAlB;AACD;;AACD,qBAAK+E,SAAL,CAAe/E,CAAf,EAAkBF,GAAlB,EAAqB,KAArB,EAA4BuE,UAA5B;AACD;AACF;AACF;AACF,SAdI,MAeA,IAAIS,KAAK,CAAChB,MAAN,IAAgBpC,wBAAYC,IAAhC,EAAsC;AACzC,cAAI+E,SAAS,GAAG5B,KAAK,CAAC3E,IAAtB;;AACA,cAAIkG,QAAQ,GAAGnC,oBAAQyC,eAAvB,EAAwC;AACtCN,YAAAA,QAAQ,GAAGnC,oBAAQyC,eAAnB;AACD;;AACD,cAAID,SAAS,IAAI7F,sBAAUc,IAA3B,EAAiC;AAC/B+E,YAAAA,SAAS,GAAG,KAAKrG,iBAAL,EAAZ;AACD;;AACD,eAAK,IAAIP,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAIG,uBAArB,EAAkCH,GAAC,EAAnC,EAAuC;AACrC,iBAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAID,sBAArB,EAAiCC,EAAC,EAAlC,EAAsC;AACpC,kBAAI,KAAKX,KAAL,CAAWS,GAAX,EAAcE,EAAd,KAAoB,KAAKX,KAAL,CAAWS,GAAX,EAAcE,EAAd,EAAiBG,IAAjB,IAAyBuG,SAAjD,EAA4D;AAC1D,oBAAI,KAAKrH,KAAL,CAAWS,GAAX,EAAcE,EAAd,EAAiB8D,MAAjB,IAA2BpC,wBAAYqC,MAA3C,EAAmD;AACjDqC,kBAAAA,YAAY,CAAC/D,IAAb,CAAkB,KAAKhD,KAAL,CAAWS,GAAX,EAAcE,EAAd,CAAlB;AACD;;AACD,qBAAK+E,SAAL,CAAe/E,EAAf,EAAkBF,GAAlB,EAAqB,IAArB,EAA2BuE,UAA3B;AACD;AACF;AACF,WAjBwC,CAkBzC;;AACD;AACF,OA1DD,EA0DG,KA1DH;;AA2DA,UAAIC,UAAU,CAAC9D,MAAX,GAAoB,CAAxB,EAA2B;AACzB,QAAA,KAAI,CAACmD,OAAL,IAAgB0C,QAAhB;AACD;;AACD/B,MAAAA,UAAU,GAAG8B,YAAb;AAlEgC;;AAClC,WAAO9B,UAAU,CAAC9D,MAAX,GAAoB,CAA3B,EAA8B;AAAA;AAkE7B;AACF;AACD;;;;;;;;SAMAoG,iBAAA,wBAAeC,QAAf,EAAyB7D,GAAzB,EAA8B8D,IAA9B,EAAoC;AAClC,SAAK5D,YAAL,CAAkBb,IAAlB,CAAuB;AACrBwE,MAAAA,QAAQ,EAARA,QADqB;AAErB7D,MAAAA,GAAG,EAAHA,GAFqB;AAGrB+D,MAAAA,MAAM,EAAE,OAHa;AAIrBD,MAAAA,IAAI,EAAJA;AAJqB,KAAvB;AAMD;;SAEDN,aAAA,oBAAWK,QAAX,EAAqB7D,GAArB,EAA0B;AACxB,SAAKE,YAAL,CAAkBb,IAAlB,CAAuB;AACrBwE,MAAAA,QAAQ,EAARA,QADqB;AAErB7D,MAAAA,GAAG,EAAHA,GAFqB;AAGrB+D,MAAAA,MAAM,EAAE;AAHa,KAAvB;AAKD;;SAEDN,aAAA,oBAAWI,QAAX,EAAqB7D,GAArB,EAA0B;AACxB,SAAKE,YAAL,CAAkBb,IAAlB,CAAuB;AACrBwE,MAAAA,QAAQ,EAARA,QADqB;AAErB7D,MAAAA,GAAG,EAAHA,GAFqB;AAGrB+D,MAAAA,MAAM,EAAE;AAHa,KAAvB;AAKD;;SAEDC,cAAA,qBAAYH,QAAZ,EAAsB7D,GAAtB,EAA2B,CACzB;AACD,IACD;;;SACA+B,YAAA,mBAAU/D,CAAV,EAAaC,CAAb,EAAgBgG,SAAhB,EAA2BH,IAA3B,EAAiC;AAC/B,QAAIhC,KAAK,GAAG,KAAKzF,KAAL,CAAW4B,CAAX,EAAcD,CAAd,CAAZ;AACA,SAAK4C,kBAAL,CAAwBkB,KAAxB;;AACA,QAAImC,SAAJ,EAAe;AACbnC,MAAAA,KAAK,CAACoC,OAAN,CAAc,KAAKvD,OAAnB;AACD;;AAED,QAAIwD,SAAS,GAAGF,SAAS,GAAG/C,oBAAQkD,SAAX,GAAuB,CAAhD;AACAtC,IAAAA,KAAK,CAACuC,KAAN,CAAY,KAAK1D,OAAL,GAAewD,SAA3B;AACA,SAAKP,cAAL,CAAoB,KAAKjD,OAAL,GAAewD,SAAnC,EAA8C3H,EAAE,CAACC,EAAH,CAAMqF,KAAK,CAAC9D,CAAZ,EAAe8D,KAAK,CAAC7D,CAArB,CAA9C,EAAuE6F,IAAvE;AACA,SAAKzH,KAAL,CAAW4B,CAAX,EAAcD,CAAd,IAAmB,IAAnB;AACD","sourceRoot":"/","sourcesContent":["import CellModel from \"./CellModel\";\nimport { mergePointArray, exclusivePoint } from \"../Utils/ModelUtils\"\nimport { CELL_TYPE, CELL_BASENUM, CELL_STATUS, GRID_WIDTH, GRID_HEIGHT, ANITIME } from \"./ConstValue\";\n\nexport default class GameModel {\n  constructor() {\n    this.cells = null;\n    this.cellBgs = null;\n    this.lastPos = cc.v2(-1, -1);\n    this.cellTypeNum = 5;\n    this.cellCreateType = []; // 升成种类只在这个数组里面查找\n  }\n\n  init(cellTypeNum) {\n    this.cells = [];\n    this.setCellTypeNum(cellTypeNum || this.cellTypeNum);\n    for (var i = 1; i <= GRID_WIDTH; i++) {\n      this.cells[i] = [];\n      for (var j = 1; j <= GRID_HEIGHT; j++) {\n        this.cells[i][j] = new CellModel();\n      }\n    }\n\n    // this.mock();\n    for (var i = 1; i <= GRID_WIDTH; i++) {\n      for (var j = 1; j <= GRID_HEIGHT; j++) {\n        //已经被mock数据生成了\n        if (this.cells[i][j].type != null) {\n          continue;\n        }\n        let flag = true;\n        while (flag) {\n          flag = false;\n\n          this.cells[i][j].init(this.getRandomCellType());\n          let result = this.checkPoint(j, i)[0];\n          if (result.length > 2) {\n            flag = true;\n          }\n          this.cells[i][j].setXY(j, i);\n          this.cells[i][j].setStartXY(j, i);\n        }\n      }\n    }\n\n  }\n\n  mock() {\n    this.mockInit(5, 1, CELL_TYPE.A);\n    this.mockInit(5, 3, CELL_TYPE.A);\n    this.mockInit(4, 2, CELL_TYPE.A);\n    this.mockInit(3, 2, CELL_TYPE.A);\n    this.mockInit(5, 2, CELL_TYPE.B);\n    this.mockInit(6, 2, CELL_TYPE.B);\n    this.mockInit(7, 3, CELL_TYPE.B);\n    this.mockInit(8, 2, CELL_TYPE.A);\n  }\n  mockInit(x, y, type) {\n    this.cells[x][y].init(type)\n    this.cells[x][y].setXY(y, x);\n    this.cells[x][y].setStartXY(y, x);\n  }\n\n\n  initWithData(data) {\n    // to do\n  }\n\n  /**\n   *\n   * @param x\n   * @param y\n   * @param recursive 是否递归查找\n   * @returns {([]|string|*)[]}\n   */\n  checkPoint(x, y, recursive) {\n    let rowResult = this.checkWithDirection(x, y, [cc.v2(1, 0), cc.v2(-1, 0)]);\n    let colResult = this.checkWithDirection(x, y, [cc.v2(0, -1), cc.v2(0, 1)]);\n    let samePoints = [];\n    let newCellStatus = \"\";\n    if (rowResult.length >= 5 || colResult.length >= 5) {\n      newCellStatus = CELL_STATUS.BIRD;\n    }\n    else if (rowResult.length >= 3 && colResult.length >= 3) {\n      newCellStatus = CELL_STATUS.WRAP;\n    }\n    else if (rowResult.length >= 4) {\n      newCellStatus = CELL_STATUS.LINE;\n    }\n    else if (colResult.length >= 4) {\n      newCellStatus = CELL_STATUS.COLUMN;\n    }\n    if (rowResult.length >= 3) {\n      samePoints = rowResult;\n    }\n    if (colResult.length >= 3) {\n      samePoints = mergePointArray(samePoints, colResult);\n    }\n    let result = [samePoints, newCellStatus, this.cells[y][x].type, cc.v2(x, y)];\n    // 检查一下消除的其他节点， 能不能生成更大范围的消除\n    if (recursive && result.length >= 3) {\n      let subCheckPoints = exclusivePoint(samePoints, cc.v2(x, y));\n      for (let point of subCheckPoints) {\n        let subResult = this.checkPoint(point.x, point.y, false);\n        if (subResult[1] > result[1] || (subResult[1] === result[1] && subResult[0].length > result[0].length)) {\n          result = subResult;\n        }\n      }\n    }\n    return result;\n  }\n\n  checkWithDirection(x, y, direction) {\n    let queue = [];\n    let vis = [];\n    vis[x + y * 9] = true;\n    queue.push(cc.v2(x, y));\n    let front = 0;\n    while (front < queue.length) {\n      //let direction = [cc.v2(0, -1), cc.v2(0, 1), cc.v2(1, 0), cc.v2(-1, 0)];\n      let point = queue[front];\n      let cellModel = this.cells[point.y][point.x];\n      front++;\n      if (!cellModel) {\n        continue;\n      }\n      for (let i = 0; i < direction.length; i++) {\n        let tmpX = point.x + direction[i].x;\n        let tmpY = point.y + direction[i].y;\n        if (tmpX < 1 || tmpX > 9\n          || tmpY < 1 || tmpY > 9\n          || vis[tmpX + tmpY * 9]\n          || !this.cells[tmpY][tmpX]) {\n          continue;\n        }\n        if (cellModel.type === this.cells[tmpY][tmpX].type) {\n          vis[tmpX + tmpY * 9] = true;\n          queue.push(cc.v2(tmpX, tmpY));\n        }\n      }\n    }\n    return queue;\n  }\n\n  printInfo() {\n    for (var i = 1; i <= 9; i++) {\n      var printStr = \"\";\n      for (var j = 1; j <= 9; j++) {\n        printStr += this.cells[i][j].type + \" \";\n      }\n      console.log(printStr);\n    }\n  }\n\n  getCells() {\n    return this.cells;\n  }\n  // controller调用的主要入口\n  // 点击某个格子\n  selectCell(pos) {\n    this.changeModels = [];// 发生改变的model，将作为返回值，给view播动作\n    this.effectsQueue = []; // 动物消失，爆炸等特效\n    var lastPos = this.lastPos;\n    var delta = Math.abs(pos.x - lastPos.x) + Math.abs(pos.y - lastPos.y);\n    if (delta != 1) { //非相邻格子， 直接返回\n      this.lastPos = pos;\n      return [[], []];\n    }\n    let curClickCell = this.cells[pos.y][pos.x]; //当前点击的格子\n    let lastClickCell = this.cells[lastPos.y][lastPos.x]; // 上一次点击的格式\n    this.exchangeCell(lastPos, pos);\n    var result1 = this.checkPoint(pos.x, pos.y)[0];\n    var result2 = this.checkPoint(lastPos.x, lastPos.y)[0];\n    this.curTime = 0; // 动画播放的当前时间\n    this.pushToChangeModels(curClickCell);\n    this.pushToChangeModels(lastClickCell);\n    let isCanBomb = (curClickCell.status != CELL_STATUS.COMMON && // 判断两个是否是特殊的动物\n      lastClickCell.status != CELL_STATUS.COMMON) ||\n      curClickCell.status == CELL_STATUS.BIRD ||\n      lastClickCell.status == CELL_STATUS.BIRD;\n    if (result1.length < 3 && result2.length < 3 && !isCanBomb) {//不会发生消除的情况\n      this.exchangeCell(lastPos, pos);\n      curClickCell.moveToAndBack(lastPos);\n      lastClickCell.moveToAndBack(pos);\n      this.lastPos = cc.v2(-1, -1);\n      return [this.changeModels];\n    }\n    else {\n      this.lastPos = cc.v2(-1, -1);\n      curClickCell.moveTo(lastPos, this.curTime);\n      lastClickCell.moveTo(pos, this.curTime);\n      var checkPoint = [pos, lastPos];\n      this.curTime += ANITIME.TOUCH_MOVE;\n      this.processCrush(checkPoint);\n      return [this.changeModels, this.effectsQueue];\n    }\n  }\n  // 消除\n  processCrush(checkPoint) {\n    let cycleCount = 0;\n    while (checkPoint.length > 0) {\n      let bombModels = [];\n      if (cycleCount == 0 && checkPoint.length == 2) { //特殊消除\n        let pos1 = checkPoint[0];\n        let pos2 = checkPoint[1];\n        let model1 = this.cells[pos1.y][pos1.x];\n        let model2 = this.cells[pos2.y][pos2.x];\n        if (model1.status == CELL_STATUS.BIRD || model2.status == CELL_STATUS.BIRD) {\n          let bombModel = null;\n          if (model1.status == CELL_STATUS.BIRD) {\n            model1.type = model2.type;\n            bombModels.push(model1);\n          }\n          else {\n            model2.type = model1.type;\n            bombModels.push(model2);\n          }\n\n        }\n      }\n      for (var i in checkPoint) {\n        var pos = checkPoint[i];\n        if (!this.cells[pos.y][pos.x]) {\n          continue;\n        }\n        var [result, newCellStatus, newCellType, crushPoint] = this.checkPoint(pos.x, pos.y, true);\n\n        if (result.length < 3) {\n          continue;\n        }\n        for (var j in result) {\n          var model = this.cells[result[j].y][result[j].x];\n          this.crushCell(result[j].x, result[j].y, false, cycleCount);\n          if (model.status != CELL_STATUS.COMMON) {\n            bombModels.push(model);\n          }\n        }\n        this.createNewCell(crushPoint, newCellStatus, newCellType);\n\n      }\n      this.processBomb(bombModels, cycleCount);\n      this.curTime += ANITIME.DIE;\n      checkPoint = this.down();\n      cycleCount++;\n    }\n  }\n\n  //生成新cell\n  createNewCell(pos, status, type) {\n    if (status == \"\") {\n      return;\n    }\n    if (status == CELL_STATUS.BIRD) {\n      type = CELL_TYPE.BIRD\n    }\n    let model = new CellModel();\n    this.cells[pos.y][pos.x] = model\n    model.init(type);\n    model.setStartXY(pos.x, pos.y);\n    model.setXY(pos.x, pos.y);\n    model.setStatus(status);\n    model.setVisible(0, false);\n    model.setVisible(this.curTime, true);\n    this.changeModels.push(model);\n  }\n  // 下落\n  down() {\n    let newCheckPoint = [];\n    for (var i = 1; i <= GRID_WIDTH; i++) {\n      for (var j = 1; j <= GRID_HEIGHT; j++) {\n        if (this.cells[i][j] == null) {\n          var curRow = i;\n          for (var k = curRow; k <= GRID_HEIGHT; k++) {\n            if (this.cells[k][j]) {\n              this.pushToChangeModels(this.cells[k][j]);\n              newCheckPoint.push(this.cells[k][j]);\n              this.cells[curRow][j] = this.cells[k][j];\n              this.cells[k][j] = null;\n              this.cells[curRow][j].setXY(j, curRow);\n              this.cells[curRow][j].moveTo(cc.v2(j, curRow), this.curTime);\n              curRow++;\n            }\n          }\n          var count = 1;\n          for (var k = curRow; k <= GRID_HEIGHT; k++) {\n            this.cells[k][j] = new CellModel();\n            this.cells[k][j].init(this.getRandomCellType());\n            this.cells[k][j].setStartXY(j, count + GRID_HEIGHT);\n            this.cells[k][j].setXY(j, count + GRID_HEIGHT);\n            this.cells[k][j].moveTo(cc.v2(j, k), this.curTime);\n            count++;\n            this.changeModels.push(this.cells[k][j]);\n            newCheckPoint.push(this.cells[k][j]);\n          }\n\n        }\n      }\n    }\n    this.curTime += ANITIME.TOUCH_MOVE + 0.3\n    return newCheckPoint;\n  }\n\n  pushToChangeModels(model) {\n    if (this.changeModels.indexOf(model) != -1) {\n      return;\n    }\n    this.changeModels.push(model);\n  }\n\n  cleanCmd() {\n    for (var i = 1; i <= GRID_WIDTH; i++) {\n      for (var j = 1; j <= GRID_HEIGHT; j++) {\n        if (this.cells[i][j]) {\n          this.cells[i][j].cmd = [];\n        }\n      }\n    }\n  }\n\n  exchangeCell(pos1, pos2) {\n    var tmpModel = this.cells[pos1.y][pos1.x];\n    this.cells[pos1.y][pos1.x] = this.cells[pos2.y][pos2.x];\n    this.cells[pos1.y][pos1.x].x = pos1.x;\n    this.cells[pos1.y][pos1.x].y = pos1.y;\n    this.cells[pos2.y][pos2.x] = tmpModel;\n    this.cells[pos2.y][pos2.x].x = pos2.x;\n    this.cells[pos2.y][pos2.x].y = pos2.y;\n  }\n  // 设置种类\n  // Todo 改成乱序算法\n  setCellTypeNum(num) {\n    console.log(\"num = \", num);\n    this.cellTypeNum = num;\n    this.cellCreateType = [];\n    let createTypeList = this.cellCreateType;\n    for (let i = 1; i <= CELL_BASENUM; i++) {\n      createTypeList.push(i);\n    }\n    for (let i = 0; i < createTypeList.length; i++) {\n      let index = Math.floor(Math.random() * (CELL_BASENUM - i)) + i;\n      createTypeList[i], createTypeList[index] = createTypeList[index], createTypeList[i]\n    }\n  }\n  // 随要生成一个类型\n  getRandomCellType() {\n    var index = Math.floor(Math.random() * this.cellTypeNum);\n    return this.cellCreateType[index];\n  }\n  // TODO bombModels去重\n  processBomb(bombModels, cycleCount) {\n    while (bombModels.length > 0) {\n      let newBombModel = [];\n      let bombTime = ANITIME.BOMB_DELAY;\n      bombModels.forEach(function (model) {\n        if (model.status == CELL_STATUS.LINE) {\n          for (let i = 1; i <= GRID_WIDTH; i++) {\n            if (this.cells[model.y][i]) {\n              if (this.cells[model.y][i].status != CELL_STATUS.COMMON) {\n                newBombModel.push(this.cells[model.y][i]);\n              }\n              this.crushCell(i, model.y, false, cycleCount);\n            }\n          }\n          this.addRowBomb(this.curTime, cc.v2(model.x, model.y));\n        }\n        else if (model.status == CELL_STATUS.COLUMN) {\n          for (let i = 1; i <= GRID_HEIGHT; i++) {\n            if (this.cells[i][model.x]) {\n              if (this.cells[i][model.x].status != CELL_STATUS.COMMON) {\n                newBombModel.push(this.cells[i][model.x]);\n              }\n              this.crushCell(model.x, i, false, cycleCount);\n            }\n          }\n          this.addColBomb(this.curTime, cc.v2(model.x, model.y));\n        }\n        else if (model.status == CELL_STATUS.WRAP) {\n          let x = model.x;\n          let y = model.y;\n          for (let i = 1; i <= GRID_HEIGHT; i++) {\n            for (let j = 1; j <= GRID_WIDTH; j++) {\n              let delta = Math.abs(x - j) + Math.abs(y - i);\n              if (this.cells[i][j] && delta <= 2) {\n                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\n                  newBombModel.push(this.cells[i][j]);\n                }\n                this.crushCell(j, i, false, cycleCount);\n              }\n            }\n          }\n        }\n        else if (model.status == CELL_STATUS.BIRD) {\n          let crushType = model.type\n          if (bombTime < ANITIME.BOMB_BIRD_DELAY) {\n            bombTime = ANITIME.BOMB_BIRD_DELAY;\n          }\n          if (crushType == CELL_TYPE.BIRD) {\n            crushType = this.getRandomCellType();\n          }\n          for (let i = 1; i <= GRID_HEIGHT; i++) {\n            for (let j = 1; j <= GRID_WIDTH; j++) {\n              if (this.cells[i][j] && this.cells[i][j].type == crushType) {\n                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\n                  newBombModel.push(this.cells[i][j]);\n                }\n                this.crushCell(j, i, true, cycleCount);\n              }\n            }\n          }\n          //this.crushCell(model.x, model.y);\n        }\n      }, this);\n      if (bombModels.length > 0) {\n        this.curTime += bombTime;\n      }\n      bombModels = newBombModel;\n    }\n  }\n  /**\n   * \n   * @param {开始播放的时间} playTime \n   * @param {*cell位置} pos \n   * @param {*第几次消除，用于播放音效} step \n   */\n  addCrushEffect(playTime, pos, step) {\n    this.effectsQueue.push({\n      playTime,\n      pos,\n      action: \"crush\",\n      step\n    });\n  }\n\n  addRowBomb(playTime, pos) {\n    this.effectsQueue.push({\n      playTime,\n      pos,\n      action: \"rowBomb\"\n    });\n  }\n\n  addColBomb(playTime, pos) {\n    this.effectsQueue.push({\n      playTime,\n      pos,\n      action: \"colBomb\"\n    });\n  }\n\n  addWrapBomb(playTime, pos) {\n    // TODO\n  }\n  // cell消除逻辑\n  crushCell(x, y, needShake, step) {\n    let model = this.cells[y][x];\n    this.pushToChangeModels(model);\n    if (needShake) {\n      model.toShake(this.curTime)\n    }\n\n    let shakeTime = needShake ? ANITIME.DIE_SHAKE : 0;\n    model.toDie(this.curTime + shakeTime);\n    this.addCrushEffect(this.curTime + shakeTime, cc.v2(model.x, model.y), step);\n    this.cells[y][x] = null;\n  }\n\n}\n\n"]}