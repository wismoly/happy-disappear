
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Script/Controller/GameController');
require('./assets/Script/Controller/LoginController');
require('./assets/Script/Model/CellModel');
require('./assets/Script/Model/ConstValue');
require('./assets/Script/Model/GameModel');
require('./assets/Script/UnitTest/GameModelTest');
require('./assets/Script/Utils/AudioUtils');
require('./assets/Script/Utils/ModelUtils');
require('./assets/Script/Utils/Toast');
require('./assets/Script/View/CellView');
require('./assets/Script/View/EffectLayer');
require('./assets/Script/View/GridView');
require('./assets/migration/use_v2.0.x_cc.Toggle_event');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/migration/use_v2.0.x_cc.Toggle_event.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '6a67b9H1IdAuJd6PInpnviU', 'use_v2.0.x_cc.Toggle_event');
// migration/use_v2.0.x_cc.Toggle_event.js

"use strict";

/*
 * This script is automatically generated by Cocos Creator and is only compatible with projects prior to v2.1.0.
 * You do not need to manually add this script in any other project.
 * If you don't use cc.Toggle in your project, you can delete this script directly.
 * If your project is hosted in VCS such as git, submit this script together.
 *
 * 此脚本由 Cocos Creator 自动生成，仅用于兼容 v2.1.0 之前版本的工程，
 * 你无需在任何其它项目中手动添加此脚本。
 * 如果你的项目中没用到 Toggle，可直接删除该脚本。
 * 如果你的项目有托管于 git 等版本库，请将此脚本一并上传。
 */
if (cc.Toggle) {
  // Whether the 'toggle' and 'checkEvents' events are fired when 'toggle.check() / toggle.uncheck()' is called in the code
  // 在代码中调用 'toggle.check() / toggle.uncheck()' 时是否触发 'toggle' 与 'checkEvents' 事件
  cc.Toggle._triggerEventInScript_check = true;
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9taWdyYXRpb24vdXNlX3YyLjAueF9jYy5Ub2dnbGVfZXZlbnQuanMiXSwibmFtZXMiOlsiY2MiLCJUb2dnbGUiLCJfdHJpZ2dlckV2ZW50SW5TY3JpcHRfY2hlY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7O0FBWUEsSUFBSUEsRUFBRSxDQUFDQyxNQUFQLEVBQWU7QUFDWDtBQUNBO0FBQ0FELEVBQUFBLEVBQUUsQ0FBQ0MsTUFBSCxDQUFVQywyQkFBVixHQUF3QyxJQUF4QztBQUNIIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogVGhpcyBzY3JpcHQgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgQ29jb3MgQ3JlYXRvciBhbmQgaXMgb25seSBjb21wYXRpYmxlIHdpdGggcHJvamVjdHMgcHJpb3IgdG8gdjIuMS4wLlxuICogWW91IGRvIG5vdCBuZWVkIHRvIG1hbnVhbGx5IGFkZCB0aGlzIHNjcmlwdCBpbiBhbnkgb3RoZXIgcHJvamVjdC5cbiAqIElmIHlvdSBkb24ndCB1c2UgY2MuVG9nZ2xlIGluIHlvdXIgcHJvamVjdCwgeW91IGNhbiBkZWxldGUgdGhpcyBzY3JpcHQgZGlyZWN0bHkuXG4gKiBJZiB5b3VyIHByb2plY3QgaXMgaG9zdGVkIGluIFZDUyBzdWNoIGFzIGdpdCwgc3VibWl0IHRoaXMgc2NyaXB0IHRvZ2V0aGVyLlxuICpcbiAqIOatpOiEmuacrOeUsSBDb2NvcyBDcmVhdG9yIOiHquWKqOeUn+aIkO+8jOS7heeUqOS6juWFvOWuuSB2Mi4xLjAg5LmL5YmN54mI5pys55qE5bel56iL77yMXG4gKiDkvaDml6DpnIDlnKjku7vkvZXlhbblroPpobnnm67kuK3miYvliqjmt7vliqDmraTohJrmnKzjgIJcbiAqIOWmguaenOS9oOeahOmhueebruS4reayoeeUqOWIsCBUb2dnbGXvvIzlj6/nm7TmjqXliKDpmaTor6XohJrmnKzjgIJcbiAqIOWmguaenOS9oOeahOmhueebruacieaJmOeuoeS6jiBnaXQg562J54mI5pys5bqT77yM6K+35bCG5q2k6ISa5pys5LiA5bm25LiK5Lyg44CCXG4gKi9cblxuaWYgKGNjLlRvZ2dsZSkge1xuICAgIC8vIFdoZXRoZXIgdGhlICd0b2dnbGUnIGFuZCAnY2hlY2tFdmVudHMnIGV2ZW50cyBhcmUgZmlyZWQgd2hlbiAndG9nZ2xlLmNoZWNrKCkgLyB0b2dnbGUudW5jaGVjaygpJyBpcyBjYWxsZWQgaW4gdGhlIGNvZGVcbiAgICAvLyDlnKjku6PnoIHkuK3osIPnlKggJ3RvZ2dsZS5jaGVjaygpIC8gdG9nZ2xlLnVuY2hlY2soKScg5pe25piv5ZCm6Kem5Y+RICd0b2dnbGUnIOS4jiAnY2hlY2tFdmVudHMnIOS6i+S7tlxuICAgIGNjLlRvZ2dsZS5fdHJpZ2dlckV2ZW50SW5TY3JpcHRfY2hlY2sgPSB0cnVlO1xufVxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Model/GameModel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cc442HaMlBE/ZKi7W/YUKwd', 'GameModel');
// Script/Model/GameModel.js

"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _CellModel = _interopRequireDefault(require("./CellModel"));

var _ModelUtils = require("../Utils/ModelUtils");

var _ConstValue = require("./ConstValue");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var GameModel = /*#__PURE__*/function () {
  function GameModel() {
    this.cells = null;
    this.cellBgs = null;
    this.lastPos = cc.v2(-1, -1);
    this.cellTypeNum = 5;
    this.cellCreateType = []; // 升成种类只在这个数组里面查找
  }

  var _proto = GameModel.prototype;

  _proto.init = function init(cellTypeNum) {
    this.cells = [];
    this.setCellTypeNum(cellTypeNum || this.cellTypeNum);

    for (var i = 1; i <= _ConstValue.GRID_WIDTH; i++) {
      this.cells[i] = [];

      for (var j = 1; j <= _ConstValue.GRID_HEIGHT; j++) {
        this.cells[i][j] = new _CellModel["default"]();
      }
    } // this.mock();


    for (var i = 1; i <= _ConstValue.GRID_WIDTH; i++) {
      for (var j = 1; j <= _ConstValue.GRID_HEIGHT; j++) {
        //已经被mock数据生成了
        if (this.cells[i][j].type != null) {
          continue;
        }

        var flag = true;

        while (flag) {
          flag = false;
          this.cells[i][j].init(this.getRandomCellType());
          var result = this.checkPoint(j, i)[0];

          if (result.length > 2) {
            flag = true;
          }

          this.cells[i][j].setXY(j, i);
          this.cells[i][j].setStartXY(j, i);
        }
      }
    }
  };

  _proto.mock = function mock() {
    this.mockInit(5, 1, _ConstValue.CELL_TYPE.A);
    this.mockInit(5, 3, _ConstValue.CELL_TYPE.A);
    this.mockInit(4, 2, _ConstValue.CELL_TYPE.A);
    this.mockInit(3, 2, _ConstValue.CELL_TYPE.A);
    this.mockInit(5, 2, _ConstValue.CELL_TYPE.B);
    this.mockInit(6, 2, _ConstValue.CELL_TYPE.B);
    this.mockInit(7, 3, _ConstValue.CELL_TYPE.B);
    this.mockInit(8, 2, _ConstValue.CELL_TYPE.A);
  };

  _proto.mockInit = function mockInit(x, y, type) {
    this.cells[x][y].init(type);
    this.cells[x][y].setXY(y, x);
    this.cells[x][y].setStartXY(y, x);
  };

  _proto.initWithData = function initWithData(data) {// to do
  }
  /**
   *
   * @param x
   * @param y
   * @param recursive 是否递归查找
   * @returns {([]|string|*)[]}
   */
  ;

  _proto.checkPoint = function checkPoint(x, y, recursive) {
    var rowResult = this.checkWithDirection(x, y, [cc.v2(1, 0), cc.v2(-1, 0)]);
    var colResult = this.checkWithDirection(x, y, [cc.v2(0, -1), cc.v2(0, 1)]);
    var samePoints = [];
    var newCellStatus = "";

    if (rowResult.length >= 5 || colResult.length >= 5) {
      newCellStatus = _ConstValue.CELL_STATUS.BIRD;
    } else if (rowResult.length >= 3 && colResult.length >= 3) {
      newCellStatus = _ConstValue.CELL_STATUS.WRAP;
    } else if (rowResult.length >= 4) {
      newCellStatus = _ConstValue.CELL_STATUS.LINE;
    } else if (colResult.length >= 4) {
      newCellStatus = _ConstValue.CELL_STATUS.COLUMN;
    }

    if (rowResult.length >= 3) {
      samePoints = rowResult;
    }

    if (colResult.length >= 3) {
      samePoints = (0, _ModelUtils.mergePointArray)(samePoints, colResult);
    }

    var result = [samePoints, newCellStatus, this.cells[y][x].type, cc.v2(x, y)]; // 检查一下消除的其他节点， 能不能生成更大范围的消除

    if (recursive && result.length >= 3) {
      var subCheckPoints = (0, _ModelUtils.exclusivePoint)(samePoints, cc.v2(x, y));

      for (var _iterator = _createForOfIteratorHelperLoose(subCheckPoints), _step; !(_step = _iterator()).done;) {
        var point = _step.value;
        var subResult = this.checkPoint(point.x, point.y, false);

        if (subResult[1] > result[1] || subResult[1] === result[1] && subResult[0].length > result[0].length) {
          result = subResult;
        }
      }
    }

    return result;
  };

  _proto.checkWithDirection = function checkWithDirection(x, y, direction) {
    var queue = [];
    var vis = [];
    vis[x + y * 9] = true;
    queue.push(cc.v2(x, y));
    var front = 0;

    while (front < queue.length) {
      //let direction = [cc.v2(0, -1), cc.v2(0, 1), cc.v2(1, 0), cc.v2(-1, 0)];
      var point = queue[front];
      var cellModel = this.cells[point.y][point.x];
      front++;

      if (!cellModel) {
        continue;
      }

      for (var i = 0; i < direction.length; i++) {
        var tmpX = point.x + direction[i].x;
        var tmpY = point.y + direction[i].y;

        if (tmpX < 1 || tmpX > 9 || tmpY < 1 || tmpY > 9 || vis[tmpX + tmpY * 9] || !this.cells[tmpY][tmpX]) {
          continue;
        }

        if (cellModel.type === this.cells[tmpY][tmpX].type) {
          vis[tmpX + tmpY * 9] = true;
          queue.push(cc.v2(tmpX, tmpY));
        }
      }
    }

    return queue;
  };

  _proto.printInfo = function printInfo() {
    for (var i = 1; i <= 9; i++) {
      var printStr = "";

      for (var j = 1; j <= 9; j++) {
        printStr += this.cells[i][j].type + " ";
      }

      console.log(printStr);
    }
  };

  _proto.getCells = function getCells() {
    return this.cells;
  } // controller调用的主要入口
  // 点击某个格子
  ;

  _proto.selectCell = function selectCell(pos) {
    this.changeModels = []; // 发生改变的model，将作为返回值，给view播动作

    this.effectsQueue = []; // 动物消失，爆炸等特效

    var lastPos = this.lastPos;
    var delta = Math.abs(pos.x - lastPos.x) + Math.abs(pos.y - lastPos.y);

    if (delta != 1) {
      //非相邻格子， 直接返回
      this.lastPos = pos;
      return [[], []];
    }

    var curClickCell = this.cells[pos.y][pos.x]; //当前点击的格子

    var lastClickCell = this.cells[lastPos.y][lastPos.x]; // 上一次点击的格式

    this.exchangeCell(lastPos, pos);
    var result1 = this.checkPoint(pos.x, pos.y)[0];
    var result2 = this.checkPoint(lastPos.x, lastPos.y)[0];
    this.curTime = 0; // 动画播放的当前时间

    this.pushToChangeModels(curClickCell);
    this.pushToChangeModels(lastClickCell);
    var isCanBomb = curClickCell.status != _ConstValue.CELL_STATUS.COMMON && // 判断两个是否是特殊的动物
    lastClickCell.status != _ConstValue.CELL_STATUS.COMMON || curClickCell.status == _ConstValue.CELL_STATUS.BIRD || lastClickCell.status == _ConstValue.CELL_STATUS.BIRD;

    if (result1.length < 3 && result2.length < 3 && !isCanBomb) {
      //不会发生消除的情况
      this.exchangeCell(lastPos, pos);
      curClickCell.moveToAndBack(lastPos);
      lastClickCell.moveToAndBack(pos);
      this.lastPos = cc.v2(-1, -1);
      return [this.changeModels];
    } else {
      this.lastPos = cc.v2(-1, -1);
      curClickCell.moveTo(lastPos, this.curTime);
      lastClickCell.moveTo(pos, this.curTime);
      var checkPoint = [pos, lastPos];
      this.curTime += _ConstValue.ANITIME.TOUCH_MOVE;
      this.processCrush(checkPoint);
      return [this.changeModels, this.effectsQueue];
    }
  } // 消除
  ;

  _proto.processCrush = function processCrush(checkPoint) {
    var cycleCount = 0;

    while (checkPoint.length > 0) {
      var bombModels = [];

      if (cycleCount == 0 && checkPoint.length == 2) {
        //特殊消除
        var pos1 = checkPoint[0];
        var pos2 = checkPoint[1];
        var model1 = this.cells[pos1.y][pos1.x];
        var model2 = this.cells[pos2.y][pos2.x];

        if (model1.status == _ConstValue.CELL_STATUS.BIRD || model2.status == _ConstValue.CELL_STATUS.BIRD) {
          var bombModel = null;

          if (model1.status == _ConstValue.CELL_STATUS.BIRD) {
            model1.type = model2.type;
            bombModels.push(model1);
          } else {
            model2.type = model1.type;
            bombModels.push(model2);
          }
        }
      }

      for (var i in checkPoint) {
        var pos = checkPoint[i];

        if (!this.cells[pos.y][pos.x]) {
          continue;
        }

        var _this$checkPoint = this.checkPoint(pos.x, pos.y, true),
            result = _this$checkPoint[0],
            newCellStatus = _this$checkPoint[1],
            newCellType = _this$checkPoint[2],
            crushPoint = _this$checkPoint[3];

        if (result.length < 3) {
          continue;
        }

        for (var j in result) {
          var model = this.cells[result[j].y][result[j].x];
          this.crushCell(result[j].x, result[j].y, false, cycleCount);

          if (model.status != _ConstValue.CELL_STATUS.COMMON) {
            bombModels.push(model);
          }
        }

        this.createNewCell(crushPoint, newCellStatus, newCellType);
      }

      this.processBomb(bombModels, cycleCount);
      this.curTime += _ConstValue.ANITIME.DIE;
      checkPoint = this.down();
      cycleCount++;
    }
  } //生成新cell
  ;

  _proto.createNewCell = function createNewCell(pos, status, type) {
    if (status == "") {
      return;
    }

    if (status == _ConstValue.CELL_STATUS.BIRD) {
      type = _ConstValue.CELL_TYPE.BIRD;
    }

    var model = new _CellModel["default"]();
    this.cells[pos.y][pos.x] = model;
    model.init(type);
    model.setStartXY(pos.x, pos.y);
    model.setXY(pos.x, pos.y);
    model.setStatus(status);
    model.setVisible(0, false);
    model.setVisible(this.curTime, true);
    this.changeModels.push(model);
  } // 下落
  ;

  _proto.down = function down() {
    var newCheckPoint = [];

    for (var i = 1; i <= _ConstValue.GRID_WIDTH; i++) {
      for (var j = 1; j <= _ConstValue.GRID_HEIGHT; j++) {
        if (this.cells[i][j] == null) {
          var curRow = i;

          for (var k = curRow; k <= _ConstValue.GRID_HEIGHT; k++) {
            if (this.cells[k][j]) {
              this.pushToChangeModels(this.cells[k][j]);
              newCheckPoint.push(this.cells[k][j]);
              this.cells[curRow][j] = this.cells[k][j];
              this.cells[k][j] = null;
              this.cells[curRow][j].setXY(j, curRow);
              this.cells[curRow][j].moveTo(cc.v2(j, curRow), this.curTime);
              curRow++;
            }
          }

          var count = 1;

          for (var k = curRow; k <= _ConstValue.GRID_HEIGHT; k++) {
            this.cells[k][j] = new _CellModel["default"]();
            this.cells[k][j].init(this.getRandomCellType());
            this.cells[k][j].setStartXY(j, count + _ConstValue.GRID_HEIGHT);
            this.cells[k][j].setXY(j, count + _ConstValue.GRID_HEIGHT);
            this.cells[k][j].moveTo(cc.v2(j, k), this.curTime);
            count++;
            this.changeModels.push(this.cells[k][j]);
            newCheckPoint.push(this.cells[k][j]);
          }
        }
      }
    }

    this.curTime += _ConstValue.ANITIME.TOUCH_MOVE + 0.3;
    return newCheckPoint;
  };

  _proto.pushToChangeModels = function pushToChangeModels(model) {
    if (this.changeModels.indexOf(model) != -1) {
      return;
    }

    this.changeModels.push(model);
  };

  _proto.cleanCmd = function cleanCmd() {
    for (var i = 1; i <= _ConstValue.GRID_WIDTH; i++) {
      for (var j = 1; j <= _ConstValue.GRID_HEIGHT; j++) {
        if (this.cells[i][j]) {
          this.cells[i][j].cmd = [];
        }
      }
    }
  };

  _proto.exchangeCell = function exchangeCell(pos1, pos2) {
    var tmpModel = this.cells[pos1.y][pos1.x];
    this.cells[pos1.y][pos1.x] = this.cells[pos2.y][pos2.x];
    this.cells[pos1.y][pos1.x].x = pos1.x;
    this.cells[pos1.y][pos1.x].y = pos1.y;
    this.cells[pos2.y][pos2.x] = tmpModel;
    this.cells[pos2.y][pos2.x].x = pos2.x;
    this.cells[pos2.y][pos2.x].y = pos2.y;
  } // 设置种类
  // Todo 改成乱序算法
  ;

  _proto.setCellTypeNum = function setCellTypeNum(num) {
    console.log("num = ", num);
    this.cellTypeNum = num;
    this.cellCreateType = [];
    var createTypeList = this.cellCreateType;

    for (var i = 1; i <= _ConstValue.CELL_BASENUM; i++) {
      createTypeList.push(i);
    }

    for (var _i = 0; _i < createTypeList.length; _i++) {
      var index = Math.floor(Math.random() * (_ConstValue.CELL_BASENUM - _i)) + _i;

      createTypeList[_i], createTypeList[index] = createTypeList[index], createTypeList[_i];
    }
  } // 随要生成一个类型
  ;

  _proto.getRandomCellType = function getRandomCellType() {
    var index = Math.floor(Math.random() * this.cellTypeNum);
    return this.cellCreateType[index];
  } // TODO bombModels去重
  ;

  _proto.processBomb = function processBomb(bombModels, cycleCount) {
    var _this = this;

    var _loop = function _loop() {
      var newBombModel = [];
      var bombTime = _ConstValue.ANITIME.BOMB_DELAY;
      bombModels.forEach(function (model) {
        if (model.status == _ConstValue.CELL_STATUS.LINE) {
          for (var i = 1; i <= _ConstValue.GRID_WIDTH; i++) {
            if (this.cells[model.y][i]) {
              if (this.cells[model.y][i].status != _ConstValue.CELL_STATUS.COMMON) {
                newBombModel.push(this.cells[model.y][i]);
              }

              this.crushCell(i, model.y, false, cycleCount);
            }
          }

          this.addRowBomb(this.curTime, cc.v2(model.x, model.y));
        } else if (model.status == _ConstValue.CELL_STATUS.COLUMN) {
          for (var _i2 = 1; _i2 <= _ConstValue.GRID_HEIGHT; _i2++) {
            if (this.cells[_i2][model.x]) {
              if (this.cells[_i2][model.x].status != _ConstValue.CELL_STATUS.COMMON) {
                newBombModel.push(this.cells[_i2][model.x]);
              }

              this.crushCell(model.x, _i2, false, cycleCount);
            }
          }

          this.addColBomb(this.curTime, cc.v2(model.x, model.y));
        } else if (model.status == _ConstValue.CELL_STATUS.WRAP) {
          var x = model.x;
          var y = model.y;

          for (var _i3 = 1; _i3 <= _ConstValue.GRID_HEIGHT; _i3++) {
            for (var j = 1; j <= _ConstValue.GRID_WIDTH; j++) {
              var delta = Math.abs(x - j) + Math.abs(y - _i3);

              if (this.cells[_i3][j] && delta <= 2) {
                if (this.cells[_i3][j].status != _ConstValue.CELL_STATUS.COMMON) {
                  newBombModel.push(this.cells[_i3][j]);
                }

                this.crushCell(j, _i3, false, cycleCount);
              }
            }
          }
        } else if (model.status == _ConstValue.CELL_STATUS.BIRD) {
          var crushType = model.type;

          if (bombTime < _ConstValue.ANITIME.BOMB_BIRD_DELAY) {
            bombTime = _ConstValue.ANITIME.BOMB_BIRD_DELAY;
          }

          if (crushType == _ConstValue.CELL_TYPE.BIRD) {
            crushType = this.getRandomCellType();
          }

          for (var _i4 = 1; _i4 <= _ConstValue.GRID_HEIGHT; _i4++) {
            for (var _j = 1; _j <= _ConstValue.GRID_WIDTH; _j++) {
              if (this.cells[_i4][_j] && this.cells[_i4][_j].type == crushType) {
                if (this.cells[_i4][_j].status != _ConstValue.CELL_STATUS.COMMON) {
                  newBombModel.push(this.cells[_i4][_j]);
                }

                this.crushCell(_j, _i4, true, cycleCount);
              }
            }
          } //this.crushCell(model.x, model.y);

        }
      }, _this);

      if (bombModels.length > 0) {
        _this.curTime += bombTime;
      }

      bombModels = newBombModel;
    };

    while (bombModels.length > 0) {
      _loop();
    }
  }
  /**
   * 
   * @param {开始播放的时间} playTime 
   * @param {*cell位置} pos 
   * @param {*第几次消除，用于播放音效} step 
   */
  ;

  _proto.addCrushEffect = function addCrushEffect(playTime, pos, step) {
    this.effectsQueue.push({
      playTime: playTime,
      pos: pos,
      action: "crush",
      step: step
    });
  };

  _proto.addRowBomb = function addRowBomb(playTime, pos) {
    this.effectsQueue.push({
      playTime: playTime,
      pos: pos,
      action: "rowBomb"
    });
  };

  _proto.addColBomb = function addColBomb(playTime, pos) {
    this.effectsQueue.push({
      playTime: playTime,
      pos: pos,
      action: "colBomb"
    });
  };

  _proto.addWrapBomb = function addWrapBomb(playTime, pos) {// TODO
  } // cell消除逻辑
  ;

  _proto.crushCell = function crushCell(x, y, needShake, step) {
    var model = this.cells[y][x];
    this.pushToChangeModels(model);

    if (needShake) {
      model.toShake(this.curTime);
    }

    var shakeTime = needShake ? _ConstValue.ANITIME.DIE_SHAKE : 0;
    model.toDie(this.curTime + shakeTime);
    this.addCrushEffect(this.curTime + shakeTime, cc.v2(model.x, model.y), step);
    this.cells[y][x] = null;
  };

  return GameModel;
}();

exports["default"] = GameModel;
module.exports = exports["default"];

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Utils/AudioUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fe151y+R2lFvas76dyah2Uf', 'AudioUtils');
// Script/Utils/AudioUtils.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {
    swap: {
      type: cc.AudioClip,
      "default": null
    },
    click: {
      type: cc.AudioClip,
      "default": null
    },
    eliminate: {
      type: [cc.AudioClip],
      "default": []
    },
    continuousMatch: {
      type: [cc.AudioClip],
      "default": []
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {},
  start: function start() {},
  playClick: function playClick() {
    cc.audioEngine.play(this.click, false, 1);
  },
  playSwap: function playSwap() {
    cc.audioEngine.play(this.swap, false, 1);
  },
  playEliminate: function playEliminate(step) {
    step = Math.min(this.eliminate.length - 1, step);
    cc.audioEngine.play(this.eliminate[step], false, 1);
  },
  playContinuousMatch: function playContinuousMatch(step) {
    console.log("step = ", step);
    step = Math.min(step, 11);

    if (step < 2) {
      return;
    }

    cc.audioEngine.play(this.continuousMatch[Math.floor(step / 2) - 1], false, 1);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVXRpbHMvQXVkaW9VdGlscy5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsInN3YXAiLCJ0eXBlIiwiQXVkaW9DbGlwIiwiY2xpY2siLCJlbGltaW5hdGUiLCJjb250aW51b3VzTWF0Y2giLCJvbkxvYWQiLCJzdGFydCIsInBsYXlDbGljayIsImF1ZGlvRW5naW5lIiwicGxheSIsInBsYXlTd2FwIiwicGxheUVsaW1pbmF0ZSIsInN0ZXAiLCJNYXRoIiwibWluIiwibGVuZ3RoIiwicGxheUNvbnRpbnVvdXNNYXRjaCIsImNvbnNvbGUiLCJsb2ciLCJmbG9vciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLElBQUksRUFBRTtBQUNGQyxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ00sU0FEUDtBQUVGLGlCQUFTO0FBRlAsS0FERTtBQUtSQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEYsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNLFNBRE47QUFFSCxpQkFBUztBQUZOLEtBTEM7QUFTUkUsSUFBQUEsU0FBUyxFQUFDO0FBQ05ILE1BQUFBLElBQUksRUFBRSxDQUFDTCxFQUFFLENBQUNNLFNBQUosQ0FEQTtBQUVOLGlCQUFTO0FBRkgsS0FURjtBQWFSRyxJQUFBQSxlQUFlLEVBQUM7QUFDWkosTUFBQUEsSUFBSSxFQUFFLENBQUNMLEVBQUUsQ0FBQ00sU0FBSixDQURNO0FBRVosaUJBQVM7QUFGRztBQWJSLEdBSFA7QUFzQkw7QUFFQUksRUFBQUEsTUF4Qkssb0JBd0JLLENBRVQsQ0ExQkk7QUE0QkxDLEVBQUFBLEtBNUJLLG1CQTRCSSxDQUVSLENBOUJJO0FBK0JMQyxFQUFBQSxTQUFTLEVBQUUscUJBQVU7QUFDakJaLElBQUFBLEVBQUUsQ0FBQ2EsV0FBSCxDQUFlQyxJQUFmLENBQW9CLEtBQUtQLEtBQXpCLEVBQWdDLEtBQWhDLEVBQXVDLENBQXZDO0FBQ0gsR0FqQ0k7QUFrQ0xRLEVBQUFBLFFBQVEsRUFBRSxvQkFBVTtBQUNoQmYsSUFBQUEsRUFBRSxDQUFDYSxXQUFILENBQWVDLElBQWYsQ0FBb0IsS0FBS1YsSUFBekIsRUFBK0IsS0FBL0IsRUFBc0MsQ0FBdEM7QUFDSCxHQXBDSTtBQXFDTFksRUFBQUEsYUFBYSxFQUFFLHVCQUFTQyxJQUFULEVBQWM7QUFDekJBLElBQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDQyxHQUFMLENBQVMsS0FBS1gsU0FBTCxDQUFlWSxNQUFmLEdBQXdCLENBQWpDLEVBQW9DSCxJQUFwQyxDQUFQO0FBQ0FqQixJQUFBQSxFQUFFLENBQUNhLFdBQUgsQ0FBZUMsSUFBZixDQUFvQixLQUFLTixTQUFMLENBQWVTLElBQWYsQ0FBcEIsRUFBMEMsS0FBMUMsRUFBaUQsQ0FBakQ7QUFDSCxHQXhDSTtBQXlDTEksRUFBQUEsbUJBQW1CLEVBQUUsNkJBQVNKLElBQVQsRUFBYztBQUMvQkssSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksU0FBWixFQUF1Qk4sSUFBdkI7QUFDQUEsSUFBQUEsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0YsSUFBVCxFQUFlLEVBQWYsQ0FBUDs7QUFDQSxRQUFHQSxJQUFJLEdBQUcsQ0FBVixFQUFZO0FBQ1I7QUFDSDs7QUFDRGpCLElBQUFBLEVBQUUsQ0FBQ2EsV0FBSCxDQUFlQyxJQUFmLENBQW9CLEtBQUtMLGVBQUwsQ0FBcUJTLElBQUksQ0FBQ00sS0FBTCxDQUFXUCxJQUFJLEdBQUMsQ0FBaEIsSUFBcUIsQ0FBMUMsQ0FBcEIsRUFBa0UsS0FBbEUsRUFBeUUsQ0FBekU7QUFDSCxHQWhESSxDQWtETDs7QUFsREssQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiXG5jYy5DbGFzcyh7XG4gICAgZXh0ZW5kczogY2MuQ29tcG9uZW50LFxuXG4gICAgcHJvcGVydGllczoge1xuICAgICAgICBzd2FwOiB7XG4gICAgICAgICAgICB0eXBlOiBjYy5BdWRpb0NsaXAsXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIGNsaWNrOiB7XG4gICAgICAgICAgICB0eXBlOiBjYy5BdWRpb0NsaXAsXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsXG4gICAgICAgIH0sXG4gICAgICAgIGVsaW1pbmF0ZTp7XG4gICAgICAgICAgICB0eXBlOiBbY2MuQXVkaW9DbGlwXSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IFtdLFxuICAgICAgICB9LFxuICAgICAgICBjb250aW51b3VzTWF0Y2g6e1xuICAgICAgICAgICAgdHlwZTogW2NjLkF1ZGlvQ2xpcF0sXG4gICAgICAgICAgICBkZWZhdWx0OiBbXVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxuXG4gICAgb25Mb2FkICgpIHtcbiAgICAgIFxuICAgIH0sXG5cbiAgICBzdGFydCAoKSB7XG5cbiAgICB9LFxuICAgIHBsYXlDbGljazogZnVuY3Rpb24oKXtcbiAgICAgICAgY2MuYXVkaW9FbmdpbmUucGxheSh0aGlzLmNsaWNrLCBmYWxzZSwgMSk7XG4gICAgfSxcbiAgICBwbGF5U3dhcDogZnVuY3Rpb24oKXtcbiAgICAgICAgY2MuYXVkaW9FbmdpbmUucGxheSh0aGlzLnN3YXAsIGZhbHNlLCAxKTtcbiAgICB9LFxuICAgIHBsYXlFbGltaW5hdGU6IGZ1bmN0aW9uKHN0ZXApe1xuICAgICAgICBzdGVwID0gTWF0aC5taW4odGhpcy5lbGltaW5hdGUubGVuZ3RoIC0gMSwgc3RlcCk7XG4gICAgICAgIGNjLmF1ZGlvRW5naW5lLnBsYXkodGhpcy5lbGltaW5hdGVbc3RlcF0sIGZhbHNlLCAxKTtcbiAgICB9LFxuICAgIHBsYXlDb250aW51b3VzTWF0Y2g6IGZ1bmN0aW9uKHN0ZXApe1xuICAgICAgICBjb25zb2xlLmxvZyhcInN0ZXAgPSBcIiwgc3RlcCk7XG4gICAgICAgIHN0ZXAgPSBNYXRoLm1pbihzdGVwLCAxMSk7XG4gICAgICAgIGlmKHN0ZXAgPCAyKXtcbiAgICAgICAgICAgIHJldHVybiBcbiAgICAgICAgfVxuICAgICAgICBjYy5hdWRpb0VuZ2luZS5wbGF5KHRoaXMuY29udGludW91c01hdGNoW01hdGguZmxvb3Ioc3RlcC8yKSAtIDFdLCBmYWxzZSwgMSk7XG4gICAgfVxuXG4gICAgLy8gdXBkYXRlIChkdCkge30sXG59KTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/View/EffectLayer.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0e925myn0dIjqdao1TpipF9', 'EffectLayer');
// Script/View/EffectLayer.js

"use strict";

var _ConstValue = require("../Model/ConstValue");

var _AudioUtils = _interopRequireDefault(require("../Utils/AudioUtils"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

cc.Class({
  "extends": cc.Component,
  properties: {
    // foo: {
    //    default: null,      // The default value will be used only when the component attaching
    //                           to a node for the first time
    //    url: cc.Texture2D,  // optional, default is typeof default
    //    serializable: true, // optional, default is true
    //    visible: true,      // optional, default is true
    //    displayName: 'Foo', // optional
    //    readonly: false,    // optional, default is false
    // },
    // ...
    bombWhite: {
      "default": null,
      type: cc.Prefab
    },
    crushEffect: {
      "default": null,
      type: cc.Prefab
    },
    audioUtils: {
      type: _AudioUtils["default"],
      "default": null
    }
  },
  // use this for initialization
  onLoad: function onLoad() {},
  playEffects: function playEffects(effectQueue) {
    if (!effectQueue || effectQueue.length <= 0) {
      return;
    }

    var soundMap = {}; //某一时刻，某一种声音是否播放过的标记，防止重复播放

    effectQueue.forEach(function (cmd) {
      var delayTime = cc.delayTime(cmd.playTime);
      var callFunc = cc.callFunc(function () {
        var instantEffect = null;
        var animation = null;

        if (cmd.action == "crush") {
          instantEffect = cc.instantiate(this.crushEffect);
          animation = instantEffect.getComponent(cc.Animation);
          animation.play("effect");
          !soundMap["crush" + cmd.playTime] && this.audioUtils.playEliminate(cmd.step);
          soundMap["crush" + cmd.playTime] = true;
        } else if (cmd.action == "rowBomb") {
          instantEffect = cc.instantiate(this.bombWhite);
          animation = instantEffect.getComponent(cc.Animation);
          animation.play("effect_line");
        } else if (cmd.action == "colBomb") {
          instantEffect = cc.instantiate(this.bombWhite);
          animation = instantEffect.getComponent(cc.Animation);
          animation.play("effect_col");
        }

        instantEffect.x = _ConstValue.CELL_WIDTH * (cmd.pos.x - 0.5);
        instantEffect.y = _ConstValue.CELL_WIDTH * (cmd.pos.y - 0.5);
        instantEffect.parent = this.node;
        animation.on("finished", function () {
          instantEffect.destroy();
        }, this);
      }, this);
      this.node.runAction(cc.sequence(delayTime, callFunc));
    }, this);
  } // called every frame, uncomment this function to activate update callback
  // update: function (dt) {
  // },

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVmlldy9FZmZlY3RMYXllci5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImJvbWJXaGl0ZSIsInR5cGUiLCJQcmVmYWIiLCJjcnVzaEVmZmVjdCIsImF1ZGlvVXRpbHMiLCJBdWRpb1V0aWxzIiwib25Mb2FkIiwicGxheUVmZmVjdHMiLCJlZmZlY3RRdWV1ZSIsImxlbmd0aCIsInNvdW5kTWFwIiwiZm9yRWFjaCIsImNtZCIsImRlbGF5VGltZSIsInBsYXlUaW1lIiwiY2FsbEZ1bmMiLCJpbnN0YW50RWZmZWN0IiwiYW5pbWF0aW9uIiwiYWN0aW9uIiwiaW5zdGFudGlhdGUiLCJnZXRDb21wb25lbnQiLCJBbmltYXRpb24iLCJwbGF5IiwicGxheUVsaW1pbmF0ZSIsInN0ZXAiLCJ4IiwiQ0VMTF9XSURUSCIsInBvcyIsInkiLCJwYXJlbnQiLCJub2RlIiwib24iLCJkZXN0cm95IiwicnVuQWN0aW9uIiwic2VxdWVuY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUE7Ozs7QUFDQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsSUFBQUEsU0FBUyxFQUFDO0FBQ04saUJBQVMsSUFESDtBQUVOQyxNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ007QUFGSCxLQVhGO0FBZVJDLElBQUFBLFdBQVcsRUFBQztBQUNSLGlCQUFTLElBREQ7QUFFUkYsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRkQsS0FmSjtBQW1CUkUsSUFBQUEsVUFBVSxFQUFDO0FBQ1BILE1BQUFBLElBQUksRUFBRUksc0JBREM7QUFFUCxpQkFBUztBQUZGO0FBbkJILEdBSFA7QUE0Qkw7QUFDQUMsRUFB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e0NFTExfV0lEVEh9IGZyb20gJy4uL01vZGVsL0NvbnN0VmFsdWUnO1xuXG5pbXBvcnQgQXVkaW9VdGlscyBmcm9tIFwiLi4vVXRpbHMvQXVkaW9VdGlsc1wiO1xuY2MuQ2xhc3Moe1xuICAgIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcblxuICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgLy8gZm9vOiB7XG4gICAgICAgIC8vICAgIGRlZmF1bHQ6IG51bGwsICAgICAgLy8gVGhlIGRlZmF1bHQgdmFsdWUgd2lsbCBiZSB1c2VkIG9ubHkgd2hlbiB0aGUgY29tcG9uZW50IGF0dGFjaGluZ1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvIGEgbm9kZSBmb3IgdGhlIGZpcnN0IHRpbWVcbiAgICAgICAgLy8gICAgdXJsOiBjYy5UZXh0dXJlMkQsICAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyB0eXBlb2YgZGVmYXVsdFxuICAgICAgICAvLyAgICBzZXJpYWxpemFibGU6IHRydWUsIC8vIG9wdGlvbmFsLCBkZWZhdWx0IGlzIHRydWVcbiAgICAgICAgLy8gICAgdmlzaWJsZTogdHJ1ZSwgICAgICAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyB0cnVlXG4gICAgICAgIC8vICAgIGRpc3BsYXlOYW1lOiAnRm9vJywgLy8gb3B0aW9uYWxcbiAgICAgICAgLy8gICAgcmVhZG9ubHk6IGZhbHNlLCAgICAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyBmYWxzZVxuICAgICAgICAvLyB9LFxuICAgICAgICAvLyAuLi5cbiAgICAgICAgYm9tYldoaXRlOntcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICAgICAgICB0eXBlOiBjYy5QcmVmYWJcbiAgICAgICAgfSxcbiAgICAgICAgY3J1c2hFZmZlY3Q6e1xuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgICAgICAgIHR5cGU6IGNjLlByZWZhYlxuICAgICAgICB9LFxuICAgICAgICBhdWRpb1V0aWxzOntcbiAgICAgICAgICAgIHR5cGU6IEF1ZGlvVXRpbHMsXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gdXNlIHRoaXMgZm9yIGluaXRpYWxpemF0aW9uXG4gICAgb25Mb2FkOiBmdW5jdGlvbiAoKSB7XG5cbiAgICB9LFxuICAgIHBsYXlFZmZlY3RzOiBmdW5jdGlvbihlZmZlY3RRdWV1ZSl7XG4gICAgICAgIGlmKCFlZmZlY3RRdWV1ZSB8fCBlZmZlY3RRdWV1ZS5sZW5ndGggPD0gMCl7XG4gICAgICAgICAgICByZXR1cm4gO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzb3VuZE1hcCA9IHt9OyAvL+afkOS4gOaXtuWIu++8jOafkOS4gOenjeWjsOmfs+aYr+WQpuaSreaUvui/h+eahOagh+iusO+8jOmYsuatoumHjeWkjeaSreaUvlxuICAgICAgICBlZmZlY3RRdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uKGNtZCl7XG4gICAgICAgICAgICBsZXQgZGVsYXlUaW1lID0gY2MuZGVsYXlUaW1lKGNtZC5wbGF5VGltZSk7XG4gICAgICAgICAgICBsZXQgY2FsbEZ1bmMgPSBjYy5jYWxsRnVuYyhmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIGxldCBpbnN0YW50RWZmZWN0ID0gbnVsbDtcbiAgICAgICAgICAgICAgICBsZXQgYW5pbWF0aW9uID0gbnVsbDtcbiAgICAgICAgICAgICAgICBpZihjbWQuYWN0aW9uID09IFwiY3J1c2hcIil7XG4gICAgICAgICAgICAgICAgICAgIGluc3RhbnRFZmZlY3QgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmNydXNoRWZmZWN0KTtcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uICA9IGluc3RhbnRFZmZlY3QuZ2V0Q29tcG9uZW50KGNjLkFuaW1hdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbi5wbGF5KFwiZWZmZWN0XCIpO1xuICAgICAgICAgICAgICAgICAgICAhc291bmRNYXBbXCJjcnVzaFwiICsgY21kLnBsYXlUaW1lXSAmJiB0aGlzLmF1ZGlvVXRpbHMucGxheUVsaW1pbmF0ZShjbWQuc3RlcCk7XG4gICAgICAgICAgICAgICAgICAgIHNvdW5kTWFwW1wiY3J1c2hcIiArIGNtZC5wbGF5VGltZV0gPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmKGNtZC5hY3Rpb24gPT0gXCJyb3dCb21iXCIpe1xuICAgICAgICAgICAgICAgICAgICBpbnN0YW50RWZmZWN0ID0gY2MuaW5zdGFudGlhdGUodGhpcy5ib21iV2hpdGUpO1xuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb24gID0gaW5zdGFudEVmZmVjdC5nZXRDb21wb25lbnQoY2MuQW5pbWF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uLnBsYXkoXCJlZmZlY3RfbGluZVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZihjbWQuYWN0aW9uID09IFwiY29sQm9tYlwiKXtcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFudEVmZmVjdCA9IGNjLmluc3RhbnRpYXRlKHRoaXMuYm9tYldoaXRlKTtcbiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uICA9IGluc3RhbnRFZmZlY3QuZ2V0Q29tcG9uZW50KGNjLkFuaW1hdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbi5wbGF5KFwiZWZmZWN0X2NvbFwiKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpbnN0YW50RWZmZWN0LnggPSBDRUxMX1dJRFRIICogKGNtZC5wb3MueCAtIDAuNSk7XG4gICAgICAgICAgICAgICAgaW5zdGFudEVmZmVjdC55ID0gQ0VMTF9XSURUSCAqIChjbWQucG9zLnkgLSAwLjUpO1xuICAgICAgICAgICAgICAgIGluc3RhbnRFZmZlY3QucGFyZW50ID0gdGhpcy5ub2RlO1xuICAgICAgICAgICAgICAgIGFuaW1hdGlvbi5vbihcImZpbmlzaGVkXCIsZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFudEVmZmVjdC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgfSx0aGlzKTtcbiAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSx0aGlzKTtcbiAgICAgICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoZGVsYXlUaW1lLCBjYWxsRnVuYykpO1xuICAgICAgICB9LHRoaXMpO1xuICAgIH0sXG5cbiAgICAvLyBjYWxsZWQgZXZlcnkgZnJhbWUsIHVuY29tbWVudCB0aGlzIGZ1bmN0aW9uIHRvIGFjdGl2YXRlIHVwZGF0ZSBjYWxsYmFja1xuICAgIC8vIHVwZGF0ZTogZnVuY3Rpb24gKGR0KSB7XG5cbiAgICAvLyB9LFxufSk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Controller/GameController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5ac64Iq16lBqrHZ0246FRcZ', 'GameController');
// Script/Controller/GameController.js

"use strict";

var _GameModel = _interopRequireDefault(require("../Model/GameModel"));

var _Toast = _interopRequireDefault(require("../Utils/Toast"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

cc.Class({
  "extends": cc.Component,
  properties: {
    grid: {
      "default": null,
      type: cc.Node
    },
    audioButton: {
      "default": null,
      type: cc.Node
    },
    audioSource: {
      type: cc.AudioSource
    }
  },
  // use this for initialization
  onLoad: function onLoad() {
    var audioButton = this.node.parent.getChildByName('audioButton');
    audioButton.on('click', this.callback, this);
    this.gameModel = new _GameModel["default"]();
    this.gameModel.init(4);
    var gridScript = this.grid.getComponent("GridView");
    gridScript.setController(this);
    gridScript.initWithCellModels(this.gameModel.getCells());
    this.audioSource = cc.find('Canvas/GameScene')._components[1].audio;
  },
  callback: function callback() {
    var state = this.audioSource._state;
    state === 1 ? this.audioSource.pause() : this.audioSource.play();
    (0, _Toast["default"])(state === 1 ? '关闭背景音乐🎵' : '打开背景音乐🎵');
  },
  selectCell: function selectCell(pos) {
    return this.gameModel.selectCell(pos);
  },
  cleanCmd: function cleanCmd() {
    this.gameModel.cleanCmd();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29udHJvbGxlci9HYW1lQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyIsImdyaWQiLCJ0eXBlIiwiTm9kZSIsImF1ZGlvQnV0dG9uIiwiYXVkaW9Tb3VyY2UiLCJBdWRpb1NvdXJjZSIsIm9uTG9hZCIsIm5vZGUiLCJwYXJlbnQiLCJnZXRDaGlsZEJ5TmFtZSIsIm9uIiwiY2FsbGJhY2siLCJnYW1lTW9kZWwiLCJHYW1lTW9kZWwiLCJpbml0IiwiZ3JpZFNjcmlwdCIsImdldENvbXBvbmVudCIsInNldENvbnRyb2xsZXIiLCJpbml0V2l0aENlbGxNb2RlbHMiLCJnZXRDZWxscyIsImZpbmQiLCJfY29tcG9uZW50cyIsImF1ZGlvIiwic3RhdGUiLCJfc3RhdGUiLCJwYXVzZSIsInBsYXkiLCJzZWxlY3RDZWxsIiwicG9zIiwiY2xlYW5DbWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDUCxhQUFTRCxFQUFFLENBQUNFLFNBREw7QUFFUEMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLElBQUksRUFBRTtBQUNKLGlCQUFTLElBREw7QUFFSkMsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNO0FBRkwsS0FESTtBQUtWQyxJQUFBQSxXQUFXLEVBQUU7QUFDWCxpQkFBUyxJQURFO0FBRVhGLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDTTtBQUZFLEtBTEg7QUFTVkUsSUFBQUEsV0FBVyxFQUFFO0FBQ1hILE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDUztBQURFO0FBVEgsR0FGTDtBQWVQO0FBQ0FDLEVBQUFBLE1BQU0sRUFBRSxrQkFBWTtBQUNsQixRQUFJSCxXQUFXLEdBQUcsS0FBS0ksSUFBTCxDQUFVQyxNQUFWLENBQWlCQyxjQUFqQixDQUFnQyxhQUFoQyxDQUFsQjtBQUNBTixJQUFBQSxXQUFXLENBQUNPLEVBQVosQ0FBZSxPQUFmLEVBQXdCLEtBQUtDLFFBQTdCLEVBQXVDLElBQXZDO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixJQUFJQyxxQkFBSixFQUFqQjtBQUNBLFNBQUtELFNBQUwsQ0FBZUUsSUFBZixDQUFvQixDQUFwQjtBQUNBLFFBQUlDLFVBQVUsR0FBRyxLQUFLZixJQUFMLENBQVVnQixZQUFWLENBQXVCLFVBQXZCLENBQWpCO0FBQ0FELElBQUFBLFVBQVUsQ0FBQ0UsYUFBWCxDQUF5QixJQUF6QjtBQUNBRixJQUFBQSxVQUFVLENBQUNHLGtCQUFYLENBQThCLEtBQUtOLFNBQUwsQ0FBZU8sUUFBZixFQUE5QjtBQUNBLFNBQUtmLFdBQUwsR0FBbUJSLEVBQUUsQ0FBQ3dCLElBQUgsQ0FBUSxrQkFBUixFQUE0QkMsV0FBNUIsQ0FBd0MsQ0FBeEMsRUFBMkNDLEtBQTlEO0FBQ0QsR0F6Qk07QUEyQlBYLEVBQUFBLFFBQVEsRUFBRSxvQkFBWTtBQUNwQixRQUFJWSxLQUFLLEdBQUcsS0FBS25CLFdBQUwsQ0FBaUJvQixNQUE3QjtBQUNBRCxJQUFBQSxLQUFLLEtBQUssQ0FBVixHQUFjLEtBQUtuQixXQUFMLENBQWlCcUIsS0FBakIsRUFBZCxHQUF5QyxLQUFLckIsV0FBTCxDQUFpQnNCLElBQWpCLEVBQXpDO0FBQ0EsMkJBQU1ILEtBQUssS0FBSyxDQUFWLEdBQWMsVUFBZCxHQUEyQixVQUFqQztBQUNELEdBL0JNO0FBaUNQSSxFQUFBQSxVQUFVLEVBQUUsb0JBQVVDLEdBQVYsRUFBZTtBQUN6QixXQUFPLEtBQUtoQixTQUFMLENBQWVlLFVBQWYsQ0FBMEJDLEdBQTFCLENBQVA7QUFDRCxHQW5DTTtBQW9DUEMsRUFBQUEsUUFBUSxFQUFFLG9CQUFZO0FBQ3BCLFNBQUtqQixTQUFMLENBQWVpQixRQUFmO0FBQ0Q7QUF0Q00sQ0FBVCIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVNb2RlbCBmcm9tIFwiLi4vTW9kZWwvR2FtZU1vZGVsXCI7XG5pbXBvcnQgVG9hc3QgZnJvbSAnLi4vVXRpbHMvVG9hc3QnO1xuXG5jYy5DbGFzcyh7XG4gIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcbiAgcHJvcGVydGllczoge1xuICAgIGdyaWQ6IHtcbiAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgICB0eXBlOiBjYy5Ob2RlXG4gICAgfSxcbiAgICBhdWRpb0J1dHRvbjoge1xuICAgICAgZGVmYXVsdDogbnVsbCxcbiAgICAgIHR5cGU6IGNjLk5vZGVcbiAgICB9LFxuICAgIGF1ZGlvU291cmNlOiB7XG4gICAgICB0eXBlOiBjYy5BdWRpb1NvdXJjZVxuICAgIH1cbiAgfSxcbiAgLy8gdXNlIHRoaXMgZm9yIGluaXRpYWxpemF0aW9uXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xuICAgIGxldCBhdWRpb0J1dHRvbiA9IHRoaXMubm9kZS5wYXJlbnQuZ2V0Q2hpbGRCeU5hbWUoJ2F1ZGlvQnV0dG9uJylcbiAgICBhdWRpb0J1dHRvbi5vbignY2xpY2snLCB0aGlzLmNhbGxiYWNrLCB0aGlzKVxuICAgIHRoaXMuZ2FtZU1vZGVsID0gbmV3IEdhbWVNb2RlbCgpO1xuICAgIHRoaXMuZ2FtZU1vZGVsLmluaXQoNCk7XG4gICAgdmFyIGdyaWRTY3JpcHQgPSB0aGlzLmdyaWQuZ2V0Q29tcG9uZW50KFwiR3JpZFZpZXdcIik7XG4gICAgZ3JpZFNjcmlwdC5zZXRDb250cm9sbGVyKHRoaXMpO1xuICAgIGdyaWRTY3JpcHQuaW5pdFdpdGhDZWxsTW9kZWxzKHRoaXMuZ2FtZU1vZGVsLmdldENlbGxzKCkpO1xuICAgIHRoaXMuYXVkaW9Tb3VyY2UgPSBjYy5maW5kKCdDYW52YXMvR2FtZVNjZW5lJykuX2NvbXBvbmVudHNbMV0uYXVkaW87XG4gIH0sXG5cbiAgY2FsbGJhY2s6IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgc3RhdGUgPSB0aGlzLmF1ZGlvU291cmNlLl9zdGF0ZTtcbiAgICBzdGF0ZSA9PT0gMSA/IHRoaXMuYXVkaW9Tb3VyY2UucGF1c2UoKSA6IHRoaXMuYXVkaW9Tb3VyY2UucGxheSgpXG4gICAgVG9hc3Qoc3RhdGUgPT09IDEgPyAn5YWz6Zet6IOM5pmv6Z+z5LmQ8J+OtScgOiAn5omT5byA6IOM5pmv6Z+z5LmQ8J+OtScgKVxuICB9LFxuXG4gIHNlbGVjdENlbGw6IGZ1bmN0aW9uIChwb3MpIHtcbiAgICByZXR1cm4gdGhpcy5nYW1lTW9kZWwuc2VsZWN0Q2VsbChwb3MpO1xuICB9LFxuICBjbGVhbkNtZDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZ2FtZU1vZGVsLmNsZWFuQ21kKCk7XG4gIH1cbn0pO1xuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Model/CellModel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'dae88GCevBMaK7lQqhume8G', 'CellModel');
// Script/Model/CellModel.js

"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _ConstValue = require("./ConstValue");

var CellModel = /*#__PURE__*/function () {
  function CellModel() {
    this.type = null;
    this.status = _ConstValue.CELL_STATUS.COMMON;
    this.x = 1;
    this.y = 1;
    this.startX = 1;
    this.startY = 1;
    this.cmd = [];
    this.isDeath = false;
    this.objecCount = Math.floor(Math.random() * 1000);
  }

  var _proto = CellModel.prototype;

  _proto.init = function init(type) {
    this.type = type;
  };

  _proto.isEmpty = function isEmpty() {
    return this.type == _ConstValue.CELL_TYPE.EMPTY;
  };

  _proto.setEmpty = function setEmpty() {
    this.type = _ConstValue.CELL_TYPE.EMPTY;
  };

  _proto.setXY = function setXY(x, y) {
    this.x = x;
    this.y = y;
  };

  _proto.setStartXY = function setStartXY(x, y) {
    this.startX = x;
    this.startY = y;
  };

  _proto.setStatus = function setStatus(status) {
    this.status = status;
  };

  _proto.moveToAndBack = function moveToAndBack(pos) {
    var srcPos = cc.v2(this.x, this.y);
    this.cmd.push({
      action: "moveTo",
      keepTime: _ConstValue.ANITIME.TOUCH_MOVE,
      playTime: 0,
      pos: pos
    });
    this.cmd.push({
      action: "moveTo",
      keepTime: _ConstValue.ANITIME.TOUCH_MOVE,
      playTime: _ConstValue.ANITIME.TOUCH_MOVE,
      pos: srcPos
    });
  };

  _proto.moveTo = function moveTo(pos, playTime) {
    var srcPos = cc.v2(this.x, this.y);
    this.cmd.push({
      action: "moveTo",
      keepTime: _ConstValue.ANITIME.TOUCH_MOVE,
      playTime: playTime,
      pos: pos
    });
    this.x = pos.x;
    this.y = pos.y;
  };

  _proto.toDie = function toDie(playTime) {
    this.cmd.push({
      action: "toDie",
      playTime: playTime,
      keepTime: _ConstValue.ANITIME.DIE
    });
    this.isDeath = true;
  };

  _proto.toShake = function toShake(playTime) {
    this.cmd.push({
      action: "toShake",
      playTime: playTime,
      keepTime: _ConstValue.ANITIME.DIE_SHAKE
    });
  };

  _proto.setVisible = function setVisible(playTime, isVisible) {
    this.cmd.push({
      action: "setVisible",
      playTime: playTime,
      keepTime: 0,
      isVisible: isVisible
    });
  };

  _proto.moveToAndDie = function moveToAndDie(pos) {};

  _proto.isBird = function isBird() {
    return this.type == _ConstValue.CELL_TYPE.G;
  };

  return CellModel;
}();

exports["default"] = CellModel;
module.exports = exports["default"];

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTW9kZWwvQ2VsbE1vZGVsLmpzIl0sIm5hbWVzIjpbIkNlbGxNb2RlbCIsInR5cGUiLCJzdGF0dXMiLCJDRUxMX1NUQVRVUyIsIkNPTU1PTiIsIngiLCJ5Iiwic3RhcnRYIiwic3RhcnRZIiwiY21kIiwiaXNEZWF0aCIsIm9iamVjQ291bnQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJpbml0IiwiaXNFbXB0eSIsIkNFTExfVFlQRSIsIkVNUFRZIiwic2V0RW1wdHkiLCJzZXRYWSIsInNldFN0YXJ0WFkiLCJzZXRTdGF0dXMiLCJtb3ZlVG9BbmRCYWNrIiwicG9zIiwic3JjUG9zIiwiY2MiLCJ2MiIsInB1c2giLCJhY3Rpb24iLCJrZWVwVGltZSIsIkFOSVRJTUUiLCJUT1VDSF9NT1ZFIiwicGxheVRpbWUiLCJtb3ZlVG8iLCJ0b0RpZSIsIkRJRSIsInRvU2hha2UiLCJESUVfU0hBS0UiLCJzZXRWaXNpYmxlIiwiaXNWaXNpYmxlIiwibW92ZVRvQW5kRGllIiwiaXNCaXJkIiwiRyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7SUFDcUJBO0FBQ25CLHVCQUFjO0FBQ1osU0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDQSxTQUFLQyxNQUFMLEdBQWNDLHdCQUFZQyxNQUExQjtBQUNBLFNBQUtDLENBQUwsR0FBUyxDQUFUO0FBQ0EsU0FBS0MsQ0FBTCxHQUFTLENBQVQ7QUFDQSxTQUFLQyxNQUFMLEdBQWMsQ0FBZDtBQUNBLFNBQUtDLE1BQUwsR0FBYyxDQUFkO0FBQ0EsU0FBS0MsR0FBTCxHQUFXLEVBQVg7QUFDQSxTQUFLQyxPQUFMLEdBQWUsS0FBZjtBQUNBLFNBQUtDLFVBQUwsR0FBa0JDLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0IsSUFBM0IsQ0FBbEI7QUFDRDs7OztTQUVEQyxPQUFBLGNBQUtkLElBQUwsRUFBVztBQUNULFNBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUNE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QUFPLEtBQUt6QyxJQUFMLElBQWFnQixzQkFBVTBCLENBQTlCO0FBQ0QiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENFTExfVFlQRSwgQU5JVElNRSwgQ0VMTF9TVEFUVVMsIEdSSURfSEVJR0hUIH0gZnJvbSBcIi4vQ29uc3RWYWx1ZVwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2VsbE1vZGVsIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy50eXBlID0gbnVsbDtcbiAgICB0aGlzLnN0YXR1cyA9IENFTExfU1RBVFVTLkNPTU1PTjtcbiAgICB0aGlzLnggPSAxO1xuICAgIHRoaXMueSA9IDE7XG4gICAgdGhpcy5zdGFydFggPSAxO1xuICAgIHRoaXMuc3RhcnRZID0gMTtcbiAgICB0aGlzLmNtZCA9IFtdO1xuICAgIHRoaXMuaXNEZWF0aCA9IGZhbHNlO1xuICAgIHRoaXMub2JqZWNDb3VudCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApO1xuICB9XG5cbiAgaW5pdCh0eXBlKSB7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgfVxuXG4gIGlzRW1wdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMudHlwZSA9PSBDRUxMX1RZUEUuRU1QVFk7XG4gIH1cblxuICBzZXRFbXB0eSgpIHtcbiAgICB0aGlzLnR5cGUgPSBDRUxMX1RZUEUuRU1QVFk7XG4gIH1cbiAgc2V0WFkoeCwgeSkge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgfVxuXG4gIHNldFN0YXJ0WFkoeCwgeSkge1xuICAgIHRoaXMuc3RhcnRYID0geDtcbiAgICB0aGlzLnN0YXJ0WSA9IHk7XG4gIH1cblxuICBzZXRTdGF0dXMoc3RhdHVzKSB7XG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gIH1cblxuICBtb3ZlVG9BbmRCYWNrKHBvcykge1xuICAgIHZhciBzcmNQb3MgPSBjYy52Mih0aGlzLngsIHRoaXMueSk7XG4gICAgdGhpcy5jbWQucHVzaCh7XG4gICAgICBhY3Rpb246IFwibW92ZVRvXCIsXG4gICAgICBrZWVwVGltZTogQU5JVElNRS5UT1VDSF9NT1ZFLFxuICAgICAgcGxheVRpbWU6IDAsXG4gICAgICBwb3M6IHBvc1xuICAgIH0pO1xuICAgIHRoaXMuY21kLnB1c2goe1xuICAgICAgYWN0aW9uOiBcIm1vdmVUb1wiLFxuICAgICAga2VlcFRpbWU6IEFOSVRJTUUuVE9VQ0hfTU9WRSxcbiAgICAgIHBsYXlUaW1lOiBBTklUSU1FLlRPVUNIX01PVkUsXG4gICAgICBwb3M6IHNyY1Bvc1xuICAgIH0pO1xuICB9XG5cbiAgbW92ZVRvKHBvcywgcGxheVRpbWUpIHtcbiAgICB2YXIgc3JjUG9zID0gY2MudjIodGhpcy54LCB0aGlzLnkpO1xuICAgIHRoaXMuY21kLnB1c2goe1xuICAgICAgYWN0aW9uOiBcIm1vdmVUb1wiLFxuICAgICAga2VlcFRpbWU6IEFOSVRJTUUuVE9VQ0hfTU9WRSxcbiAgICAgIHBsYXlUaW1lOiBwbGF5VGltZSxcbiAgICAgIHBvczogcG9zXG4gICAgfSk7XG4gICAgdGhpcy54ID0gcG9zLng7XG4gICAgdGhpcy55ID0gcG9zLnk7XG4gIH1cblxuICB0b0RpZShwbGF5VGltZSkge1xuICAgIHRoaXMuY21kLnB1c2goe1xuICAgICAgYWN0aW9uOiBcInRvRGllXCIsXG4gICAgICBwbGF5VGltZTogcGxheVRpbWUsXG4gICAgICBrZWVwVGltZTogQU5JVElNRS5ESUVcbiAgICB9KTtcbiAgICB0aGlzLmlzRGVhdGggPSB0cnVlO1xuICB9XG5cbiAgdG9TaGFrZShwbGF5VGltZSkge1xuICAgIHRoaXMuY21kLnB1c2goe1xuICAgICAgYWN0aW9uOiBcInRvU2hha2VcIixcbiAgICAgIHBsYXlUaW1lOiBwbGF5VGltZSxcbiAgICAgIGtlZXBUaW1lOiBBTklUSU1FLkRJRV9TSEFLRVxuICAgIH0pO1xuICB9XG5cbiAgc2V0VmlzaWJsZShwbGF5VGltZSwgaXNWaXNpYmxlKSB7XG4gICAgdGhpcy5jbWQucHVzaCh7XG4gICAgICBhY3Rpb246IFwic2V0VmlzaWJsZVwiLFxuICAgICAgcGxheVRpbWU6IHBsYXlUaW1lLFxuICAgICAga2VlcFRpbWU6IDAsXG4gICAgICBpc1Zpc2libGU6IGlzVmlzaWJsZVxuICAgIH0pO1xuICB9XG5cbiAgbW92ZVRvQW5kRGllKHBvcykge1xuXG4gIH1cblxuICBpc0JpcmQoKSB7XG4gICAgcmV0dXJuIHRoaXMudHlwZSA9PSBDRUxMX1RZUEUuRztcbiAgfVxuXG59XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Model/ConstValue.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f9088esGbNBtJmNaJsz0Gq4', 'ConstValue');
// Script/Model/ConstValue.js

"use strict";

exports.__esModule = true;
exports.ANITIME = exports.GRID_PIXEL_HEIGHT = exports.GRID_PIXEL_WIDTH = exports.CELL_HEIGHT = exports.CELL_WIDTH = exports.GRID_HEIGHT = exports.GRID_WIDTH = exports.CELL_STATUS = exports.CELL_BASENUM = exports.CELL_TYPE = void 0;
var CELL_TYPE = {
  EMPTY: 0,
  A: 1,
  B: 2,
  C: 3,
  D: 4,
  E: 5,
  F: 6,
  BIRD: 7
};
exports.CELL_TYPE = CELL_TYPE;
var CELL_BASENUM = 6;
exports.CELL_BASENUM = CELL_BASENUM;
var CELL_STATUS = {
  COMMON: 0,
  CLICK: "click",
  LINE: "line",
  COLUMN: "column",
  WRAP: "wrap",
  BIRD: "bird"
};
exports.CELL_STATUS = CELL_STATUS;
var GRID_WIDTH = 9;
exports.GRID_WIDTH = GRID_WIDTH;
var GRID_HEIGHT = 9;
exports.GRID_HEIGHT = GRID_HEIGHT;
var CELL_WIDTH = 70;
exports.CELL_WIDTH = CELL_WIDTH;
var CELL_HEIGHT = 70;
exports.CELL_HEIGHT = CELL_HEIGHT;
var GRID_PIXEL_WIDTH = GRID_WIDTH * CELL_WIDTH;
exports.GRID_PIXEL_WIDTH = GRID_PIXEL_WIDTH;
var GRID_PIXEL_HEIGHT = GRID_HEIGHT * CELL_HEIGHT; // ********************   时间表  animation time **************************

exports.GRID_PIXEL_HEIGHT = GRID_PIXEL_HEIGHT;
var ANITIME = {
  TOUCH_MOVE: 0.3,
  DIE: 0.2,
  DOWN: 0.5,
  BOMB_DELAY: 0.3,
  BOMB_BIRD_DELAY: 0.7,
  DIE_SHAKE: 0.4 // 死前抖动

};
exports.ANITIME = ANITIME;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvTW9kZWwvQ29uc3RWYWx1ZS5qcyJdLCJuYW1lcyI6WyJDRUxMX1RZUEUiLCJFTVBUWSIsIkEiLCJCIiwiQyIsIkQiLCJFIiwiRiIsIkJJUkQiLCJDRUxMX0JBU0VOVU0iLCJDRUxMX1NUQVRVUyIsIkNPTU1PTiIsIkNMSUNLIiwiTElORSIsIkNPTFVNTiIsIldSQVAiLCJHUklEX1dJRFRIIiwiR1JJRF9IRUlHSFQiLCJDRUxMX1dJRFRIIiwiQ0VMTF9IRUlHSFQiLCJHUklEX1BJWEVMX1dJRFRIIiwiR1JJRF9QSVhFTF9IRUlHSFQiLCJBTklUSU1FIiwiVE9VQ0hfTU9WRSIsIkRJRSIsIkRPV04iLCJCT01CX0RFTEFZIiwiQk9NQl9CSVJEX0RFTEFZIiwiRElFX1NIQUtFIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ08sSUFBTUEsU0FBUyxHQUFHO0FBQ3ZCQyxFQUFBQSxLQUFLLEVBQUUsQ0FEZ0I7QUFFdkJDLEVBQUFBLENBQUMsRUFBRSxDQUZvQjtBQUd2QkMsRUFBQUEsQ0FBQyxFQUFFLENBSG9CO0FBSXZCQyxFQUFBQSxDQUFDLEVBQUUsQ0FKb0I7QUFLdkJDLEVBQUFBLENBQUMsRUFBRSxDQUxvQjtBQU12QkMsRUFBQUEsQ0FBQyxFQUFFLENBTm9CO0FBT3ZCQyxFQUFBQSxDQUFDLEVBQUUsQ0FQb0I7QUFRdkJDLEVBQUFBLElBQUksRUFBRTtBQVJpQixDQUFsQjs7QUFVQSxJQUFNQyxZQUFZLEdBQUcsQ0FBckI7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHO0FBQ3pCQyxFQUFBQSxNQUFNLEVBQUUsQ0FEaUI7QUFFekJDLEVBQUFBLEtBQUssRUFBRSxPQUZrQjtBQUd6QkMsRUFBQUEsSUFBSSxFQUFFLE1BSG1CO0FBSXpCQyxFQUFBQSxNQUFNLEVBQUUsUUFKaUI7QUFLekJDLEVBQUFBLElBQUksRUFBRSxNQUxtQjtBQU16QlAsRUFBQUEsSUFBSSxFQUFFO0FBTm1CLENBQXBCOztBQVNBLElBQU1RLFVBQVUsR0FBRyxDQUFuQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsQ0FBcEI7O0FBRUEsSUFBTUMsVUFBVSxHQUFHLEVBQW5COztBQUNBLElBQU1DLFdBQVcsR0FBRyxFQUFwQjs7QUFFQSxJQUFNQyxnQkFBZ0IsR0FBR0osVUFBVSxHQUFHRSxVQUF0Qzs7QUFDQSxJQUFNRyxpQkFBaUIsR0FBR0osV0FBVyxHQUFHRSxXQUF4QyxFQUdQOzs7QUFDTyxJQUFNRyxPQUFPLEdBQUc7QUFDckJDLEVBQUFBLFVBQVUsRUFBRSxHQURTO0FBRXJCQyxFQUFBQSxHQUFHLEVBQUUsR0FGZ0I7QUFHckJDLEVBQUFBLElBQUksRUFBRSxHQUhlO0FBSXJCQyxFQUFBQSxVQUFVLEVBQUUsR0FKUztBQUtyQkMsRUFBQUEsZUFBZSxFQUFFLEdBTEk7QUFNckJDLEVBQUFBLFNBQVMsRUFBRSxHQU5VLENBTU47O0FBTk0sQ0FBaEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGNvbnN0IENFTExfVFlQRSA9IHtcbiAgRU1QVFk6IDAsXG4gIEE6IDEsXG4gIEI6IDIsXG4gIEM6IDMsXG4gIEQ6IDQsXG4gIEU6IDUsXG4gIEY6IDYsXG4gIEJJUkQ6IDdcbn1cbmV4cG9ydCBjb25zdCBDRUxMX0JBU0VOVU0gPSA2O1xuZXhwb3J0IGNvbnN0IENFTExfU1RBVFVTID0ge1xuICBDT01NT046IDAsXG4gIENMSUNLOiBcImNsaWNrXCIsXG4gIExJTkU6IFwibGluZVwiLFxuICBDT0xVTU46IFwiY29sdW1uXCIsXG4gIFdSQVA6IFwid3JhcFwiLFxuICBCSVJEOiBcImJpcmRcIlxufVxuXG5leHBvcnQgY29uc3QgR1JJRF9XSURUSCA9IDk7XG5leHBvcnQgY29uc3QgR1JJRF9IRUlHSFQgPSA5O1xuXG5leHBvcnQgY29uc3QgQ0VMTF9XSURUSCA9IDcwO1xuZXhwb3J0IGNvbnN0IENFTExfSEVJR0hUID0gNzA7XG5cbmV4cG9ydCBjb25zdCBHUklEX1BJWEVMX1dJRFRIID0gR1JJRF9XSURUSCAqIENFTExfV0lEVEg7XG5leHBvcnQgY29uc3QgR1JJRF9QSVhFTF9IRUlHSFQgPSBHUklEX0hFSUdIVCAqIENFTExfSEVJR0hUO1xuXG5cbi8vICoqKioqKioqKioqKioqKioqKioqICAg5pe26Ze06KGoICBhbmltYXRpb24gdGltZSAqKioqKioqKioqKioqKioqKioqKioqKioqKlxuZXhwb3J0IGNvbnN0IEFOSVRJTUUgPSB7XG4gIFRPVUNIX01PVkU6IDAuMyxcbiAgRElFOiAwLjIsXG4gIERPV046IDAuNSxcbiAgQk9NQl9ERUxBWTogMC4zLFxuICBCT01CX0JJUkRfREVMQVk6IDAuNyxcbiAgRElFX1NIQUtFOiAwLjQgLy8g5q275YmN5oqW5YqoXG59XG5cblxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/UnitTest/GameModelTest.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '16fce9lOkpA7a2vuhmMkDMZ', 'GameModelTest');
// Script/UnitTest/GameModelTest.js

"use strict";

cc.Class({
  "extends": cc.Component,
  properties: {// foo: {
    //    default: null,      // The default value will be used only when the component attaching
    //                           to a node for the first time
    //    url: cc.Texture2D,  // optional, default is typeof default
    //    serializable: true, // optional, default is true
    //    visible: true,      // optional, default is true
    //    displayName: 'Foo', // optional
    //    readonly: false,    // optional, default is false
    // },
    // ...
  } // use this for initialization
  // onLoad: function () {
  //     var gameModel = new GameModel();
  //     gameModel.init();
  //     gameModel.printInfo();
  //     for(var i = 1;i<=9;i++){
  //         for(var j = 1;j<=9;j++){
  //             console.log(gameModel.checkPoint(i,j).join(" ,"));
  //         }
  //     }
  // },
  // called every frame, uncomment this function to activate update callback
  // update: function (dt) {
  // },

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVW5pdFRlc3QvR2FtZU1vZGVsVGVzdC5qcyJdLCJuYW1lcyI6WyJjYyIsIkNsYXNzIiwiQ29tcG9uZW50IiwicHJvcGVydGllcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsRUFBRSxDQUFDQyxLQUFILENBQVM7QUFDTCxhQUFTRCxFQUFFLENBQUNFLFNBRFA7QUFHTEMsRUFBQUEsVUFBVSxFQUFFLENBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWUSxHQUhQLENBZ0JMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7O0FBL0JLLENBQVQiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNjLkNsYXNzKHtcbiAgICBleHRlbmRzOiBjYy5Db21wb25lbnQsXG5cbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgIC8vIGZvbzoge1xuICAgICAgICAvLyAgICBkZWZhdWx0OiBudWxsLCAgICAgIC8vIFRoZSBkZWZhdWx0IHZhbHVlIHdpbGwgYmUgdXNlZCBvbmx5IHdoZW4gdGhlIGNvbXBvbmVudCBhdHRhY2hpbmdcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICB0byBhIG5vZGUgZm9yIHRoZSBmaXJzdCB0aW1lXG4gICAgICAgIC8vICAgIHVybDogY2MuVGV4dHVyZTJELCAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHlwZW9mIGRlZmF1bHRcbiAgICAgICAgLy8gICAgc2VyaWFsaXphYmxlOiB0cnVlLCAvLyBvcHRpb25hbCwgZGVmYXVsdCBpcyB0cnVlXG4gICAgICAgIC8vICAgIHZpc2libGU6IHRydWUsICAgICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgdHJ1ZVxuICAgICAgICAvLyAgICBkaXNwbGF5TmFtZTogJ0ZvbycsIC8vIG9wdGlvbmFsXG4gICAgICAgIC8vICAgIHJlYWRvbmx5OiBmYWxzZSwgICAgLy8gb3B0aW9uYWwsIGRlZmF1bHQgaXMgZmFsc2VcbiAgICAgICAgLy8gfSxcbiAgICAgICAgLy8gLi4uXG4gICAgfSxcblxuICAgIC8vIHVzZSB0aGlzIGZvciBpbml0aWFsaXphdGlvblxuICAgIC8vIG9uTG9hZDogZnVuY3Rpb24gKCkge1xuICAgIC8vICAgICB2YXIgZ2FtZU1vZGVsID0gbmV3IEdhbWVNb2RlbCgpO1xuICAgIC8vICAgICBnYW1lTW9kZWwuaW5pdCgpO1xuICAgIC8vICAgICBnYW1lTW9kZWwucHJpbnRJbmZvKCk7XG4gICAgLy8gICAgIGZvcih2YXIgaSA9IDE7aTw9OTtpKyspe1xuICAgIC8vICAgICAgICAgZm9yKHZhciBqID0gMTtqPD05O2orKyl7XG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coZ2FtZU1vZGVsLmNoZWNrUG9pbnQoaSxqKS5qb2luKFwiICxcIikpO1xuICAgIC8vICAgICAgICAgfVxuICAgIC8vICAgICB9XG4gICAgLy8gfSxcblxuICAgIC8vIGNhbGxlZCBldmVyeSBmcmFtZSwgdW5jb21tZW50IHRoaXMgZnVuY3Rpb24gdG8gYWN0aXZhdGUgdXBkYXRlIGNhbGxiYWNrXG4gICAgLy8gdXBkYXRlOiBmdW5jdGlvbiAoZHQpIHtcblxuICAgIC8vIH0sXG59KTtcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/View/CellView.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fbf19Cx4ptFV62UZ7+qJJpQ', 'CellView');
// Script/View/CellView.js

"use strict";

var _ConstValue = require("../Model/ConstValue");

cc.Class({
  "extends": cc.Component,
  properties: {
    // foo: {
    //    default: null,      // The default value will be used only when the component attaching
    //                           to a node for the first time
    //    url: cc.Texture2D,  // optional, default is typeof default
    //    serializable: true, // optional, default is true
    //    visible: true,      // optional, default is true
    //    displayName: 'Foo', // optional
    //    readonly: false,    // optional, default is false
    // },
    // ...
    defaultFrame: {
      "default": null,
      type: cc.SpriteFrame
    }
  },
  // use this for initialization
  onLoad: function onLoad() {
    //this.model = null;
    this.isSelect = false;
  },
  initWithModel: function initWithModel(model) {
    this.model = model;
    var x = model.startX;
    var y = model.startY;
    this.node.x = _ConstValue.CELL_WIDTH * (x - 0.5);
    this.node.y = _ConstValue.CELL_HEIGHT * (y - 0.5);
    var animation = this.node.getComponent(cc.Animation);

    if (model.status == _ConstValue.CELL_STATUS.COMMON) {
      animation.stop();
    } else {
      animation.play(model.status);
    }
  },
  // 执行移动动作
  updateView: function updateView() {
    var _this = this;

    var cmd = this.model.cmd;

    if (cmd.length <= 0) {
      return;
    }

    var actionArray = [];
    var curTime = 0;

    for (var i in cmd) {
      if (cmd[i].playTime > curTime) {
        var delay = cc.delayTime(cmd[i].playTime - curTime);
        actionArray.push(delay);
      }

      if (cmd[i].action == "moveTo") {
        var x = (cmd[i].pos.x - 0.5) * _ConstValue.CELL_WIDTH;
        var y = (cmd[i].pos.y - 0.5) * _ConstValue.CELL_HEIGHT;
        var move = cc.moveTo(_ConstValue.ANITIME.TOUCH_MOVE, cc.v2(x, y));
        actionArray.push(move);
      } else if (cmd[i].action == "toDie") {
        if (this.status == _ConstValue.CELL_STATUS.BIRD) {
          var animation = this.node.getComponent(cc.Animation);
          animation.play("effect");
          actionArray.push(cc.delayTime(_ConstValue.ANITIME.BOMB_BIRD_DELAY));
        }

        var callFunc = cc.callFunc(function () {
          this.node.destroy();
        }, this);
        actionArray.push(callFunc);
      } else if (cmd[i].action == "setVisible") {
        (function () {
          var isVisible = cmd[i].isVisible;
          actionArray.push(cc.callFunc(function () {
            if (isVisible) {
              this.node.opacity = 255;
            } else {
              this.node.opacity = 0;
            }
          }, _this));
        })();
      } else if (cmd[i].action == "toShake") {
        var rotateRight = cc.rotateBy(0.06, 30);
        var rotateLeft = cc.rotateBy(0.12, -60);
        actionArray.push(cc.repeat(cc.sequence(rotateRight, rotateLeft, rotateRight), 2));
      }

      curTime = cmd[i].playTime + cmd[i].keepTime;
    }

    if (actionArray.length == 1) {
      this.node.runAction(actionArray[0]);
    } else {
      var _cc;

      this.node.runAction((_cc = cc).sequence.apply(_cc, actionArray));
    }
  },
  // called every frame, uncomment this function to activate update callback
  // update: function (dt) {
  // },
  setSelect: function setSelect(flag) {
    var animation = this.node.getComponent(cc.Animation);
    var bg = this.node.getChildByName("select");

    if (flag == false && this.isSelect && this.model.status == _ConstValue.CELL_STATUS.COMMON) {
      animation.stop();
      this.node.getComponent(cc.Sprite).spriteFrame = this.defaultFrame;
    } else if (flag && this.model.status == _ConstValue.CELL_STATUS.COMMON) {
      animation.play(_ConstValue.CELL_STATUS.CLICK);
    } else if (flag && this.model.status == _ConstValue.CELL_STATUS.BIRD) {
      animation.play(_ConstValue.CELL_STATUS.CLICK);
    }

    bg.active = flag;
    this.isSelect = flag;
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Utils/ModelUtils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5a4d0rEszhGNqSG/EcGQQi5', 'ModelUtils');
// Script/Utils/ModelUtils.ts

Object.defineProperty(exports, "__esModule", { value: true });
exports.exclusivePoint = exports.mergePointArray = void 0;
/**
 * 合并
 * @param rowPoints
 * @param colPoints
 */
function mergePointArray(rowPoints, colPoints) {
    var result = rowPoints.concat();
    colPoints = colPoints.filter(function (colEle) {
        var repeat = false;
        result.forEach(function (rowEle) {
            if (colEle.equals(rowEle)) {
                repeat = true;
            }
        }, this);
        return !repeat;
    }, this);
    result.push.apply(result, colPoints);
    return result;
}
exports.mergePointArray = mergePointArray;
/**
 * 减法
 * @param points
 * @param exclusivePoint
 */
function exclusivePoint(points, exclusivePoint) {
    var result = new Array();
    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var point = points_1[_i];
        if (!point.equals(exclusivePoint)) {
            result.push(point);
        }
    }
    return result;
}
exports.exclusivePoint = exclusivePoint;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvVXRpbHMvTW9kZWxVdGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0dBSUc7QUFDSCxTQUFpQixlQUFlLENBQUMsU0FBcUIsRUFBRSxTQUFvQjtJQUN4RSxJQUFJLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVSxNQUFNO1FBQ3pDLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNuQixNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsTUFBTTtZQUMzQixJQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUM7Z0JBQ3JCLE1BQU0sR0FBRyxJQUFJLENBQUE7YUFDaEI7UUFDTCxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDVCxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQ25CLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNULE1BQU0sQ0FBQyxJQUFJLE9BQVgsTUFBTSxFQUFTLFNBQVMsRUFBRTtJQUMxQixPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDO0FBYkQsMENBYUM7QUFFRDs7OztHQUlHO0FBQ0gsU0FBZ0IsY0FBYyxDQUFDLE1BQWlCLEVBQUUsY0FBdUI7SUFDckUsSUFBSSxNQUFNLEdBQUcsSUFBSSxLQUFLLEVBQVcsQ0FBQztJQUNsQyxLQUFpQixVQUFNLEVBQU4saUJBQU0sRUFBTixvQkFBTSxFQUFOLElBQU0sRUFBQztRQUFwQixJQUFJLEtBQUssZUFBQTtRQUNULElBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFDO1lBQzdCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDdEI7S0FDSjtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUM7QUFSRCx3Q0FRQyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICog5ZCI5bm2XG4gKiBAcGFyYW0gcm93UG9pbnRzXG4gKiBAcGFyYW0gY29sUG9pbnRzXG4gKi9cbmV4cG9ydCAgZnVuY3Rpb24gbWVyZ2VQb2ludEFycmF5KHJvd1BvaW50cyA6IGNjLlZlYzJbXSwgY29sUG9pbnRzOiBjYy5WZWMyW10pe1xuICAgIGxldCByZXN1bHQgPSByb3dQb2ludHMuY29uY2F0KCk7XG4gICAgY29sUG9pbnRzID0gY29sUG9pbnRzLmZpbHRlcihmdW5jdGlvbiAoY29sRWxlKSB7XG4gICAgICAgIGxldCByZXBlYXQgPSBmYWxzZTtcbiAgICAgICAgcmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKHJvd0VsZSkge1xuICAgICAgICAgICAgaWYoY29sRWxlLmVxdWFscyhyb3dFbGUpKXtcbiAgICAgICAgICAgICAgICByZXBlYXQgPSB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sIHRoaXMpO1xuICAgICAgICByZXR1cm4gIXJlcGVhdDtcbiAgICB9LCB0aGlzKTtcbiAgICByZXN1bHQucHVzaCguLi5jb2xQb2ludHMpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICog5YeP5rOVXG4gKiBAcGFyYW0gcG9pbnRzXG4gKiBAcGFyYW0gZXhjbHVzaXZlUG9pbnRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4Y2x1c2l2ZVBvaW50KHBvaW50czogY2MuVmVjMltdLCBleGNsdXNpdmVQb2ludDogY2MuVmVjMil7XG4gICAgbGV0IHJlc3VsdCA9IG5ldyBBcnJheTxjYy5WZWMyPigpO1xuICAgIGZvcihsZXQgcG9pbnQgb2YgcG9pbnRzKXtcbiAgICAgICAgaWYoIXBvaW50LmVxdWFscyhleGNsdXNpdmVQb2ludCkpe1xuICAgICAgICAgICAgcmVzdWx0LnB1c2gocG9pbnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/View/GridView.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd0d1fDj9rlDx5QUtP+2toQV', 'GridView');
// Script/View/GridView.js

"use strict";

var _ConstValue = require("../Model/ConstValue");

var _AudioUtils = _interopRequireDefault(require("../Utils/AudioUtils"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

cc.Class({
  "extends": cc.Component,
  properties: {
    // foo: {
    //    default: null,      // The default value will be used only when the component attaching
    //                           to a node for the first time
    //    url: cc.Texture2D,  // optional, default is typeof default
    //    serializable: true, // optional, default is true
    //    visible: true,      // optional, default is true
    //    displayName: 'Foo', // optional
    //    readonly: false,    // optional, default is false
    // },
    // ...
    aniPre: {
      "default": [],
      type: [cc.Prefab]
    },
    effectLayer: {
      "default": null,
      type: cc.Node
    },
    audioUtils: {
      type: _AudioUtils["default"],
      "default": null
    }
  },
  // use this for initialization
  onLoad: function onLoad() {
    this.setListener();
    this.lastTouchPos = cc.Vec2(-1, -1);
    this.isCanMove = true;
    this.isInPlayAni = false; // 是否在播放中
  },
  setController: function setController(controller) {
    this.controller = controller;
  },
  initWithCellModels: function initWithCellModels(cellsModels) {
    this.cellViews = [];

    for (var i = 1; i <= 9; i++) {
      this.cellViews[i] = [];

      for (var j = 1; j <= 9; j++) {
        var type = cellsModels[i][j].type;
        var aniView = cc.instantiate(this.aniPre[type]);
        aniView.parent = this.node;
        var cellViewScript = aniView.getComponent("CellView");
        cellViewScript.initWithModel(cellsModels[i][j]);
        this.cellViews[i][j] = aniView;
      }
    }
  },
  setListener: function setListener() {
    this.node.on(cc.Node.EventType.TOUCH_START, function (eventTouch) {
      if (this.isInPlayAni) {
        //播放动画中，不允许点击
        return true;
      }

      var touchPos = eventTouch.getLocation();
      var cellPos = this.convertTouchPosToCell(touchPos);

      if (cellPos) {
        var changeModels = this.selectCell(cellPos);
        this.isCanMove = changeModels.length < 3;
      } else {
        this.isCanMove = false;
      }

      return true;
    }, this); // 滑动操作逻辑

    this.node.on(cc.Node.EventType.TOUCH_MOVE, function (eventTouch) {
      if (this.isCanMove) {
        var startTouchPos = eventTouch.getStartLocation();
        var startCellPos = this.convertTouchPosToCell(startTouchPos);
        var touchPos = eventTouch.getLocation();
        var cellPos = this.convertTouchPosToCell(touchPos);

        if (startCellPos.x != cellPos.x || startCellPos.y != cellPos.y) {
          this.isCanMove = false;
          var changeModels = this.selectCell(cellPos);
        }
      }
    }, this);
    this.node.on(cc.Node.EventType.TOUCH_END, function (eventTouch) {// console.log("1111");
    }, this);
    this.node.on(cc.Node.EventType.TOUCH_CANCEL, function (eventTouch) {// console.log("1111");
    }, this);
  },
  // 根据点击的像素位置，转换成网格中的位置
  convertTouchPosToCell: function convertTouchPosToCell(pos) {
    pos = this.node.convertToNodeSpace(pos);

    if (pos.x < 0 || pos.x >= _ConstValue.GRID_PIXEL_WIDTH || pos.y < 0 || pos.y >= _ConstValue.GRID_PIXEL_HEIGHT) {
      return false;
    }

    var x = Math.floor(pos.x / _ConstValue.CELL_WIDTH) + 1;
    var y = Math.floor(pos.y / _ConstValue.CELL_HEIGHT) + 1;
    return cc.v2(x, y);
  },
  // 移动格子
  updateView: function updateView(changeModels) {
    var newCellViewInfo = [];

    for (var i in changeModels) {
      var model = changeModels[i];
      var viewInfo = this.findViewByModel(model);
      var view = null; // 如果原来的cell不存在，则新建

      if (!viewInfo) {
        var type = model.type;
        var aniView = cc.instantiate(this.aniPre[type]);
        aniView.parent = this.node;
        var cellViewScript = aniView.getComponent("CellView");
        cellViewScript.initWithModel(model);
        view = aniView;
      } // 如果已经存在
      else {
          view = viewInfo.view;
          this.cellViews[viewInfo.y][viewInfo.x] = null;
        }

      var cellScript = view.getComponent("CellView");
      cellScript.updateView(); // 执行移动动作

      if (!model.isDeath) {
        newCellViewInfo.push({
          model: model,
          view: view
        });
      }
    } // 重新标记this.cellviews的信息


    newCellViewInfo.forEach(function (ele) {
      var model = ele.model;
      this.cellViews[model.y][model.x] = ele.view;
    }, this);
  },
  // 显示选中的格子背景
  updateSelect: function updateSelect(pos) {
    for (var i = 1; i <= 9; i++) {
      for (var j = 1; j <= 9; j++) {
        if (this.cellViews[i][j]) {
          var cellScript = this.cellViews[i][j].getComponent("CellView");

          if (pos.x == j && pos.y == i) {
            cellScript.setSelect(true);
          } else {
            cellScript.setSelect(false);
          }
        }
      }
    }
  },

  /**
   * 根据cell的model返回对应的view
   */
  findViewByModel: function findViewByModel(model) {
    for (var i = 1; i <= 9; i++) {
      for (var j = 1; j <= 9; j++) {
        if (this.cellViews[i][j] && this.cellViews[i][j].getComponent("CellView").model == model) {
          return {
            view: this.cellViews[i][j],
            x: j,
            y: i
          };
        }
      }
    }

    return null;
  },
  getPlayAniTime: function getPlayAniTime(changeModels) {
    if (!changeModels) {
      return 0;
    }

    var maxTime = 0;
    changeModels.forEach(function (ele) {
      ele.cmd.forEach(function (cmd) {
        if (maxTime < cmd.playTime + cmd.keepTime) {
          maxTime = cmd.playTime + cmd.keepTime;
        }
      }, this);
    }, this);
    return maxTime;
  },
  // 获得爆炸次数， 同一个时间算一个
  getStep: function getStep(effectsQueue) {
    if (!effectsQueue) {
      return 0;
    }

    return effectsQueue.reduce(function (maxValue, efffectCmd) {
      return Math.max(maxValue, efffectCmd.step || 0);
    }, 0);
  },
  //一段时间内禁止操作
  disableTouch: function disableTouch(time, step) {
    if (time <= 0) {
      return;
    }

    this.isInPlayAni = true;
    this.node.runAction(cc.sequence(cc.delayTime(time), cc.callFunc(function () {
      this.isInPlayAni = false;
      this.audioUtils.playContinuousMatch(step);
    }, this)));
  },
  // 正常击中格子后的操作
  selectCell: function selectCell(cellPos) {
    var result = this.controller.selectCell(cellPos); // 直接先丢给model处理数据逻辑

    var changeModels = result[0]; // 有改变的cell，包含新生成的cell和生成马上摧毁的格子

    var effectsQueue = result[1]; //各种特效

    this.playEffect(effectsQueue);
    this.disableTouch(this.getPlayAniTime(changeModels), this.getStep(effectsQueue));
    this.updateView(changeModels);
    this.controller.cleanCmd();

    if (changeModels.length >= 2) {
      this.updateSelect(cc.v2(-1, -1));
      this.audioUtils.playSwap();
    } else {
      this.updateSelect(cellPos);
      this.audioUtils.playClick();
    }

    return changeModels;
  },
  playEffect: function playEffect(effectsQueue) {
    this.effectLayer.getComponent("EffectLayer").playEffects(effectsQueue);
  } // called every frame, uncomment this function to activate update callback
  // update: function (dt) {
  // },

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Controller/LoginController.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '5f4845Bus5AQoZakK7KAXht', 'LoginController');
// Script/Controller/LoginController.js

"use strict";

var _AudioUtils = _interopRequireDefault(require("../Utils/AudioUtils"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

cc.Class({
  "extends": cc.Component,
  properties: {
    loadingBar: {
      type: cc.ProgressBar,
      "default": null
    },
    loginButton: {
      type: cc.Button,
      "default": null
    },
    worldSceneBGM: {
      type: cc.AudioClip,
      "default": null
    }
  },
  onLoad: function onLoad() {
    this.gameSceneBGMAudioId = cc.audioEngine.play(this.worldSceneBGM, true, 1);
  },
  onLogin: function onLogin() {
    var _this = this;

    this.last = 0;
    this.loadingBar.node.active = true;
    this.loginButton.node.active = false;
    this.loadingBar.progress = 0;
    this.loadingBar.barSprite.fillRange = 0;

    cc.loader.onProgress = function (count, amount, item) {
      var progress = (count / amount).toFixed(2);

      if (progress > _this.loadingBar.barSprite.fillRange) {
        _this.loadingBar.barSprite.fillRange = count / amount;
      }
    };

    cc.director.preloadScene("Game", function () {
      this.loadingBar.node.active = false;
      this.loginButton.node.active = false; // cc.log("加载成功");

      cc.director.loadScene("Game");
    }.bind(this));
  },
  onDestroy: function onDestroy() {
    cc.audioEngine.stop(this.gameSceneBGMAudioId);
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9TY3JpcHQvQ29udHJvbGxlci9Mb2dpbkNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiY2MiLCJDbGFzcyIsIkNvbXBvbmVudCIsInByb3BlcnRpZXMiLCJsb2FkaW5nQmFyIiwidHlwZSIsIlByb2dyZXNzQmFyIiwibG9naW5CdXR0b24iLCJCdXR0b24iLCJ3b3JsZFNjZW5lQkdNIiwiQXVkaW9DbGlwIiwib25Mb2FkIiwiZ2FtZVNjZW5lQkdNQXVkaW9JZCIsImF1ZGlvRW5naW5lIiwicGxheSIsIm9uTG9naW4iLCJsYXN0Iiwibm9kZSIsImFjdGl2ZSIsInByb2dyZXNzIiwiYmFyU3ByaXRlIiwiZmlsbFJhbmdlIiwibG9hZGVyIiwib25Qcm9ncmVzcyIsImNvdW50IiwiYW1vdW50IiwiaXRlbSIsInRvRml4ZWQiLCJkaXJlY3RvciIsInByZWxvYWRTY2VuZSIsImxvYWRTY2VuZSIsImJpbmQiLCJvbkRlc3Ryb3kiLCJzdG9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBRUFBLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTO0FBQ1AsYUFBU0QsRUFBRSxDQUFDRSxTQURMO0FBR1BDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxVQUFVLEVBQUU7QUFDVkMsTUFBQUEsSUFBSSxFQUFFTCxFQUFFLENBQUNNLFdBREM7QUFFVixpQkFBUztBQUZDLEtBREY7QUFLVkMsSUFBQUEsV0FBVyxFQUFFO0FBQ1hGLE1BQUFBLElBQUksRUFBRUwsRUFBRSxDQUFDUSxNQURFO0FBRVgsaUJBQVM7QUFGRSxLQUxIO0FBU1ZDLElBQUFBLGFBQWEsRUFBRTtBQUNiSixNQUFBQSxJQUFJLEVBQUVMLEVBQUUsQ0FBQ1UsU0FESTtBQUViLGlCQUFTO0FBRkk7QUFUTCxHQUhMO0FBa0JQQyxFQUFBQSxNQWxCTyxvQkFrQkU7QUFDUCxTQUFLQyxtQkFBTCxHQUEyQlosRUFBRSxDQUFDYSxXQUFILENBQWVDLElBQWYsQ0FBb0IsS0FBS0wsYUFBekIsRUFBd0MsSUFBeEMsRUFBOEMsQ0FBOUMsQ0FBM0I7QUFDRCxHQXBCTTtBQXNCUE0sRUFBQUEsT0FBTyxFQUFFLG1CQUFZO0FBQUE7O0FBQ25CLFNBQUtDLElBQUwsR0FBWSxDQUFaO0FBQ0EsU0FBS1osVUFBTCxDQUFnQmEsSUFBaEIsQ0FBcUJDLE1BQXJCLEdBQThCLElBQTlCO0FBQ0EsU0FBS1gsV0FBTCxDQUFpQlUsSUFBakIsQ0FBc0JDLE1BQXRCLEdBQStCLEtBQS9CO0FBQ0EsU0FBS2QsVUFBTCxDQUFnQmUsUUFBaEIsR0FBMkIsQ0FBM0I7QUFDQSxTQUFLZixVQUFMLENBQWdCZ0IsU0FBaEIsQ0FBMEJDLFNBQTFCLEdBQXNDLENBQXRDOztBQUNBckIsSUFBQUEsRUFBRSxDQUFDc0IsTUFBSCxDQUFVQyxVQUFWLEdBQXVCLFVBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFnQkMsSUFBaEIsRUFBeUI7QUFDOUMsVUFBSVAsUUFBUSxHQUFHLENBQUNLLEtBQUssR0FBR0MsTUFBVCxFQUFpQkUsT0FBakIsQ0FBeUIsQ0FBekIsQ0FBZjs7QUFDQSxVQUFJUixRQUFRLEdBQUcsS0FBSSxDQUFDZixVQUFMLENBQWdCZ0IsU0FBaEIsQ0FBMEJDLFNBQXpDLEVBQW9EO0FBQ2xELFFBQUEsS0FBSSxDQUFDakIsVUFBTCxDQUFnQmdCLFNBQWhCLENBQTBCQyxTQUExQixHQUFzQ0csS0FBSyxHQUFHQyxNQUE5QztBQUNEO0FBQ0YsS0FMRDs7QUFNQXpCLElBQUFBLEVBQUUsQ0FBQzRCLFFBQUgsQ0FBWUMsWUFBWixDQUF5QixNQUF6QixFQUFpQyxZQUFZO0FBQzNDLFdBQUt6QixVQUFMLENBQWdCYSxJQUFoQixDQUFxQkMsTUFBckIsR0FBOEIsS0FBOUI7QUFDQSxXQUFLWCxXQUFMLENBQWlCVSxJQUFqQixDQUFzQkMsTUFBdEIsR0FBK0IsS0FBL0IsQ0FGMkMsQ0FHM0M7O0FBQ0FsQixNQUFBQSxFQUFFLENBQUM0QixRQUFILENBQVlFLFNBQVosQ0FBc0IsTUFBdEI7QUFDRCxLQUxnQyxDQUsvQkMsSUFMK0IsQ0FLMUIsSUFMMEIsQ0FBakM7QUFNRCxHQXhDTTtBQTBDUEMsRUFBQUEsU0FBUyxFQUFFLHFCQUFZO0FBQ3JCaEMsSUFBQUEsRUFBRSxDQUFDYSxXQUFILENBQWVvQixJQUFmLENBQW9CLEtBQUtyQixtQkFBekI7QUFDRDtBQTVDTSxDQUFUIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXVkaW9VdGlscyBmcm9tIFwiLi4vVXRpbHMvQXVkaW9VdGlsc1wiO1xuXG5jYy5DbGFzcyh7XG4gIGV4dGVuZHM6IGNjLkNvbXBvbmVudCxcblxuICBwcm9wZXJ0aWVzOiB7XG4gICAgbG9hZGluZ0Jhcjoge1xuICAgICAgdHlwZTogY2MuUHJvZ3Jlc3NCYXIsXG4gICAgICBkZWZhdWx0OiBudWxsLFxuICAgIH0sXG4gICAgbG9naW5CdXR0b246IHtcbiAgICAgIHR5cGU6IGNjLkJ1dHRvbixcbiAgICAgIGRlZmF1bHQ6IG51bGwsXG4gICAgfSxcbiAgICB3b3JsZFNjZW5lQkdNOiB7XG4gICAgICB0eXBlOiBjYy5BdWRpb0NsaXAsXG4gICAgICBkZWZhdWx0OiBudWxsLFxuICAgIH1cbiAgfSxcblxuICBvbkxvYWQoKSB7XG4gICAgdGhpcy5nYW1lU2NlbmVCR01BdWRpb0lkID0gY2MuYXVkaW9FbmdpbmUucGxheSh0aGlzLndvcmxkU2NlbmVCR00sIHRydWUsIDEpO1xuICB9LFxuXG4gIG9uTG9naW46IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxhc3QgPSAwO1xuICAgIHRoaXMubG9hZGluZ0Jhci5ub2RlLmFjdGl2ZSA9IHRydWU7XG4gICAgdGhpcy5sb2dpbkJ1dHRvbi5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMubG9hZGluZ0Jhci5wcm9ncmVzcyA9IDA7XG4gICAgdGhpcy5sb2FkaW5nQmFyLmJhclNwcml0ZS5maWxsUmFuZ2UgPSAwO1xuICAgIGNjLmxvYWRlci5vblByb2dyZXNzID0gKGNvdW50LCBhbW91bnQsIGl0ZW0pID0+IHtcbiAgICAgIGxldCBwcm9ncmVzcyA9IChjb3VudCAvIGFtb3VudCkudG9GaXhlZCgyKTtcbiAgICAgIGlmIChwcm9ncmVzcyA+IHRoaXMubG9hZGluZ0Jhci5iYXJTcHJpdGUuZmlsbFJhbmdlKSB7XG4gICAgICAgIHRoaXMubG9hZGluZ0Jhci5iYXJTcHJpdGUuZmlsbFJhbmdlID0gY291bnQgLyBhbW91bnQ7XG4gICAgICB9XG4gICAgfTtcbiAgICBjYy5kaXJlY3Rvci5wcmVsb2FkU2NlbmUoXCJHYW1lXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHRoaXMubG9hZGluZ0Jhci5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgdGhpcy5sb2dpbkJ1dHRvbi5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgLy8gY2MubG9nKFwi5Yqg6L295oiQ5YqfXCIpO1xuICAgICAgY2MuZGlyZWN0b3IubG9hZFNjZW5lKFwiR2FtZVwiKTtcbiAgICB9LmJpbmQodGhpcykpO1xuICB9LFxuXG4gIG9uRGVzdHJveTogZnVuY3Rpb24gKCkge1xuICAgIGNjLmF1ZGlvRW5naW5lLnN0b3AodGhpcy5nYW1lU2NlbmVCR01BdWRpb0lkKTtcbiAgfVxufSk7XG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/Utils/Toast.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7775bvWKyFNCa465R+EmYU0', 'Toast');
// Script/Utils/Toast.js

"use strict";

//一个简单的tost组件，用法：
// let Toast = reqire('Toast.js')
// Toast(text,{gravity,duration,bg_color})
//text:要显示的字符串
//gravity(可选):位置，String类型，可选值('CENTER','TOP','BOTTOM'),默认为'CENTER'
//duration(可选):时间，Number类型，单位为秒，默认1s
//bg_color(可选):颜色，cc.color类型，默认cc.color(102, 102, 102, 200)
function Toast(text, _temp) {
  if (text === void 0) {
    text = "";
  }

  var _ref = _temp === void 0 ? {} : _temp,
      _ref$gravity = _ref.gravity,
      gravity = _ref$gravity === void 0 ? "CENTER" : _ref$gravity,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 1 : _ref$duration,
      _ref$bg_color = _ref.bg_color,
      bg_color = _ref$bg_color === void 0 ? cc.color(102, 102, 102, 200) : _ref$bg_color;

  // canvas
  var canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);
  var width = canvas.node.width;
  var height = canvas.node.height;
  var bgNode = new cc.Node(); // Lable文本格式设置

  var textNode = new cc.Node();
  var textLabel = textNode.addComponent(cc.Label);
  textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;
  textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;
  textLabel.fontSize = 30;
  textLabel.string = text; // 当文本宽度过长时，设置为自动换行格式

  if (text.length * textLabel.fontSize > width * 3 / 5) {
    textNode.width = width * 3 / 5;
    textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;
  } else {
    textNode.width = text.length * textLabel.fontSize;
  }

  var lineCount = ~~(text.length * textLabel.fontSize / (width * 3 / 5)) + 1;
  textNode.height = textLabel.fontSize * lineCount; // 背景设置

  var ctx = bgNode.addComponent(cc.Graphics);
  ctx.arc(-textNode.width / 2, 0, textNode.height / 2 + 20, 0.5 * Math.PI, 1.5 * Math.PI, true);
  ctx.lineTo(textNode.width / 2, -(textNode.height / 2 + 20));
  ctx.arc(textNode.width / 2, 0, textNode.height / 2 + 20, 1.5 * Math.PI, 0.5 * Math.PI, true);
  ctx.lineTo(-textNode.width / 2, textNode.height / 2 + 20);
  ctx.fillColor = bg_color;
  ctx.fill();
  bgNode.addChild(textNode); // gravity 设置Toast显示的位置

  if (gravity === "CENTER") {
    bgNode.y = 0;
    bgNode.x = 0;
  } else if (gravity === "TOP") {
    bgNode.y = bgNode.y + height / 5 * 2;
  } else if (gravity === "BOTTOM") {
    bgNode.y = bgNode.y - height / 5 * 2;
  }

  canvas.node.addChild(bgNode);
  var finished = cc.callFunc(function () {
    bgNode.destroy();
  });
  var action = cc.sequence(cc.moveBy(duration, cc.v2(0, 0)), cc.fadeOut(0.3), finished);
  bgNode.runAction(action);
}

module.exports = Toast;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------
