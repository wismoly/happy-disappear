{"version":3,"sources":["assets/Script/Controller/GameController.js"],"names":["cc","Class","Component","properties","grid","type","Node","onLoad","gameModel","GameModel","init","gridScript","getComponent","setController","initWithCellModels","getCells","selectCell","pos","cleanCmd"],"mappings":";;;;;;AAAA;;;;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,IAAI,EAAC;AACD,iBAAS,IADR;AAEDC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFR;AAXG,GAHP;AAoBL;AACAC,EAAAA,MAAM,EAAE,kBAAY;AAChB,SAAKC,SAAL,GAAiB,IAAIC,qBAAJ,EAAjB;AACA,SAAKD,SAAL,CAAeE,IAAf,CAAoB,CAApB;AACA,QAAIC,UAAU,GAAG,KAAKP,IAAL,CAAUQ,YAAV,CAAuB,UAAvB,CAAjB;AACAD,IAAAA,UAAU,CAACE,aAAX,CAAyB,IAAzB;AACAF,IAAAA,UAAU,CAACG,kBAAX,CAA8B,KAAKN,SAAL,CAAeO,QAAf,EAA9B;AACH,GA3BI;AA6BLC,EAAAA,UAAU,EAAE,oBAASC,GAAT,EAAa;AACrB,WAAO,KAAKT,SAAL,CAAeQ,UAAf,CAA0BC,GAA1B,CAAP;AACH,GA/BI;AAgCLC,EAAAA,QAAQ,EAAE,oBAAU;AAChB,SAAKV,SAAL,CAAeU,QAAf;AACH,GAlCI,CAoCL;AACA;AAEA;;AAvCK,CAAT","sourceRoot":"/","sourcesContent":["import GameModel from \"../Model/GameModel\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        grid:{\n            default: null,\n            type: cc.Node\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.gameModel = new GameModel();\n        this.gameModel.init(4);\n        var gridScript = this.grid.getComponent(\"GridView\");\n        gridScript.setController(this);\n        gridScript.initWithCellModels(this.gameModel.getCells());\n    },\n\n    selectCell: function(pos){\n        return this.gameModel.selectCell(pos);\n    },\n    cleanCmd: function(){\n        this.gameModel.cleanCmd();\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // }, \n});\n"]}